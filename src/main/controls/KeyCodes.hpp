#pragma once
#ifdef __APPLE__
#include <TargetConditionals.h>
#if TARGET_OS_IOS
  #include "controls/keyboard/UIKeyConstants.hpp"
#else
  #include <Carbon/Carbon.h>
#endif
#elif defined _WIN32
#include <WinUser.h>
#elif defined __linux__
#include <X11/keysymdef.h>
#endif

#include <string>
#include <map>

namespace mpc::controls
{

class KeyCodes
{
public:
    enum vmpcKeyCodes {
        VMPC_KEY_F1,
        VMPC_KEY_F2,
        VMPC_KEY_F3,
        VMPC_KEY_F4,
        VMPC_KEY_F5,
        VMPC_KEY_F6,
        VMPC_KEY_F7,
        VMPC_KEY_F8,
        VMPC_KEY_F9,
        VMPC_KEY_F10,
        VMPC_KEY_F11,
        VMPC_KEY_F12,

        VMPC_KEY_Escape,
        VMPC_KEY_ANSI_Grave,
        VMPC_KEY_ISO_Section,
        VMPC_KEY_Tab,
        VMPC_KEY_CapsLock,
        VMPC_KEY_Shift,
        VMPC_KEY_Function,
        VMPC_KEY_Control,
        VMPC_KEY_Option,
        VMPC_KEY_Command,
        VMPC_KEY_ANSI_Minus,
        VMPC_KEY_ANSI_Equal,
        VMPC_KEY_Delete,
        VMPC_KEY_Insert,
        VMPC_KEY_ANSI_LeftBracket,
        VMPC_KEY_ANSI_RightBracket,
        VMPC_KEY_ANSI_Backslash,
        VMPC_KEY_ANSI_Semicolon,
        VMPC_KEY_ANSI_Quote,
        VMPC_KEY_Return,
        VMPC_KEY_ANSI_Comma,
        VMPC_KEY_ANSI_Period,
        VMPC_KEY_ANSI_Slash,
        VMPC_KEY_RightShift,
        VMPC_KEY_RightOption,
        VMPC_KEY_Space,

        VMPC_KEY_ANSI_Keypad0,
        VMPC_KEY_ANSI_Keypad1,
        VMPC_KEY_ANSI_Keypad2,
        VMPC_KEY_ANSI_Keypad3,
        VMPC_KEY_ANSI_Keypad4,
        VMPC_KEY_ANSI_Keypad5,
        VMPC_KEY_ANSI_Keypad6,
        VMPC_KEY_ANSI_Keypad7,
        VMPC_KEY_ANSI_Keypad8,
        VMPC_KEY_ANSI_Keypad9,

        VMPC_KEY_ANSI_0,
        VMPC_KEY_ANSI_1,
        VMPC_KEY_ANSI_2,
        VMPC_KEY_ANSI_3,
        VMPC_KEY_ANSI_4,
        VMPC_KEY_ANSI_5,
        VMPC_KEY_ANSI_6,
        VMPC_KEY_ANSI_7,
        VMPC_KEY_ANSI_8,
        VMPC_KEY_ANSI_9,

        VMPC_KEY_ANSI_Q,
        VMPC_KEY_ANSI_W,
        VMPC_KEY_ANSI_E,
        VMPC_KEY_ANSI_R,
        VMPC_KEY_ANSI_T,
        VMPC_KEY_ANSI_Y,
        VMPC_KEY_ANSI_U,
        VMPC_KEY_ANSI_I,
        VMPC_KEY_ANSI_O,
        VMPC_KEY_ANSI_P,
        VMPC_KEY_ANSI_A,
        VMPC_KEY_ANSI_S,
        VMPC_KEY_ANSI_D,
        VMPC_KEY_ANSI_F,
        VMPC_KEY_ANSI_G,
        VMPC_KEY_ANSI_H,
        VMPC_KEY_ANSI_J,
        VMPC_KEY_ANSI_K,
        VMPC_KEY_ANSI_L,
        VMPC_KEY_ANSI_Z,
        VMPC_KEY_ANSI_X,
        VMPC_KEY_ANSI_C,
        VMPC_KEY_ANSI_V,
        VMPC_KEY_ANSI_B,
        VMPC_KEY_ANSI_N,
        VMPC_KEY_ANSI_M,

        VMPC_KEY_LeftArrow,
        VMPC_KEY_RightArrow,
        VMPC_KEY_UpArrow,
        VMPC_KEY_DownArrow,

        VMPC_KEY_ANSI_KeypadDecimal,
        VMPC_KEY_ANSI_KeypadMultiply,
        VMPC_KEY_ANSI_KeypadPlus,
        VMPC_KEY_ANSI_KeypadClear,
        VMPC_KEY_ANSI_KeypadDivide,
        VMPC_KEY_ANSI_KeypadEnter,
        VMPC_KEY_ANSI_KeypadMinus,
        VMPC_KEY_ANSI_KeypadEquals,

        VMPC_KEY_Home,
        VMPC_KEY_PageUp,
        VMPC_KEY_End,
        VMPC_KEY_PageDown,
    };

    static inline std::map<int, std::string> names = {
        { VMPC_KEY_F1, "F1"  },
        { VMPC_KEY_F2, "F2"  },
        { VMPC_KEY_F3, "F3"  },
        { VMPC_KEY_F4, "F4"  },
        { VMPC_KEY_F5 , "F5"  },
        { VMPC_KEY_F6 , "F6"  },
        { VMPC_KEY_F7 , "F7"  },
        { VMPC_KEY_F8, "F8"  },
        { VMPC_KEY_F9, "F9"  },
        { VMPC_KEY_F10, "F10" },
        { VMPC_KEY_F11, "F11" },
        { VMPC_KEY_F12, "F12" },

        { VMPC_KEY_Escape, "esc" },
        { VMPC_KEY_ANSI_Grave, "` (backtick)" },
        { VMPC_KEY_ISO_Section, "ยง (section mark)" },
        { VMPC_KEY_Tab, "tab" },
        { VMPC_KEY_CapsLock, "caps lock" },
        { VMPC_KEY_Shift, "left shift" },
        { VMPC_KEY_Function, "fn" },
        { VMPC_KEY_Control, "left control" },
        { VMPC_KEY_Option, "left option/alt" },
        { VMPC_KEY_Command, "command" },
        { VMPC_KEY_ANSI_Minus, "minus" },
        { VMPC_KEY_ANSI_Equal, "equals" },
        { VMPC_KEY_Delete, "delete" },
        { VMPC_KEY_Insert, "insert" },
        { VMPC_KEY_ANSI_LeftBracket, "{ (left bracket)" },
        { VMPC_KEY_ANSI_RightBracket, "} (right bracket)" },
        { VMPC_KEY_ANSI_Backslash, "\\ (backslash)" },
        { VMPC_KEY_ANSI_Semicolon, "; (semicolon)" },
        { VMPC_KEY_ANSI_Quote, "' (quote)" },
        { VMPC_KEY_Return, "return" },
        { VMPC_KEY_ANSI_Comma, ", (comma)" },
        { VMPC_KEY_ANSI_Period, ". (period)" },
        { VMPC_KEY_ANSI_Slash, "/ (slash)" },
        { VMPC_KEY_RightShift, "right shift" },
        { VMPC_KEY_RightOption, "right option/alt" },
        { VMPC_KEY_Space, "space" },

        { VMPC_KEY_ANSI_Keypad0, "Keypad 0" },
        { VMPC_KEY_ANSI_Keypad1, "Keypad 1" },
        { VMPC_KEY_ANSI_Keypad2, "Keypad 2" },
        { VMPC_KEY_ANSI_Keypad3, "Keypad 3" },
        { VMPC_KEY_ANSI_Keypad4, "Keypad 4" },
        { VMPC_KEY_ANSI_Keypad5, "Keypad 5" },
        { VMPC_KEY_ANSI_Keypad6, "Keypad 6" },
        { VMPC_KEY_ANSI_Keypad7, "Keypad 7" },
        { VMPC_KEY_ANSI_Keypad8, "Keypad 8" },
        { VMPC_KEY_ANSI_Keypad9, "Keypad 9" },

        { VMPC_KEY_ANSI_0, "0" },
        { VMPC_KEY_ANSI_1, "1" },
        { VMPC_KEY_ANSI_2, "2" },
        { VMPC_KEY_ANSI_3, "3" },
        { VMPC_KEY_ANSI_4, "4" },
        { VMPC_KEY_ANSI_5, "5" },
        { VMPC_KEY_ANSI_6, "6" },
        { VMPC_KEY_ANSI_7, "7" },
        { VMPC_KEY_ANSI_8, "8" },
        { VMPC_KEY_ANSI_9, "9" },

        { VMPC_KEY_ANSI_Q, "q" },
        { VMPC_KEY_ANSI_W, "w" },
        { VMPC_KEY_ANSI_E, "e" },
        { VMPC_KEY_ANSI_R, "r" },
        { VMPC_KEY_ANSI_T, "t" },
        { VMPC_KEY_ANSI_Y, "y" },
        { VMPC_KEY_ANSI_U, "u" },
        { VMPC_KEY_ANSI_I, "i" },
        { VMPC_KEY_ANSI_O, "o" },
        { VMPC_KEY_ANSI_P, "p" },
        { VMPC_KEY_ANSI_A, "a" },
        { VMPC_KEY_ANSI_S, "s" },
        { VMPC_KEY_ANSI_D, "d" },
        { VMPC_KEY_ANSI_F, "f" },
        { VMPC_KEY_ANSI_G, "g" },
        { VMPC_KEY_ANSI_H, "h" },
        { VMPC_KEY_ANSI_J, "j" },
        { VMPC_KEY_ANSI_K, "k" },
        { VMPC_KEY_ANSI_L, "l (letter L)" },
        { VMPC_KEY_ANSI_Z, "z" },
        { VMPC_KEY_ANSI_X, "x" },
        { VMPC_KEY_ANSI_C, "c" },
        { VMPC_KEY_ANSI_V, "v" },
        { VMPC_KEY_ANSI_B, "b" },
        { VMPC_KEY_ANSI_N, "n" },
        { VMPC_KEY_ANSI_M, "m" },

        { VMPC_KEY_LeftArrow, "cursor left"  },
        { VMPC_KEY_RightArrow, "cursor right" },
        { VMPC_KEY_UpArrow, "cursor up"    },
        { VMPC_KEY_DownArrow, "cursor down"  },

        { VMPC_KEY_ANSI_KeypadDecimal, "keypad decimal" },
        { VMPC_KEY_ANSI_KeypadMultiply, "keypad multiply" },
        { VMPC_KEY_ANSI_KeypadPlus, "keypad plus" },
        { VMPC_KEY_ANSI_KeypadClear, "keypad clear" },
        { VMPC_KEY_ANSI_KeypadDivide, "keypad divide" },
        { VMPC_KEY_ANSI_KeypadEnter, "keypad enter" },
        { VMPC_KEY_ANSI_KeypadMinus, "keypad minus" },
        { VMPC_KEY_ANSI_KeypadEquals, "keypad equals" },

        { VMPC_KEY_Home, "home" },
        { VMPC_KEY_PageUp, "page up" },
        { VMPC_KEY_End, "end" },
        { VMPC_KEY_PageDown, "page down" }
    };

    static std::string getKeyCodeName(int keyCode)
    {
        for (auto& kv : keyCodeNames) {
            if (kv.first == keyCode) {
                return kv.second;
            }
        }
        return "unknown";
    }

    static inline std::vector<std::pair<int, std::string>> keyCodeNames = {
        
#if defined(__APPLE__) && !TARGET_OS_IOS
        { kVK_F1, names[VMPC_KEY_F1] },
        { kVK_F2, names[VMPC_KEY_F2] },
        { kVK_F3, names[VMPC_KEY_F3] },
        { kVK_F4, names[VMPC_KEY_F4] },
        { kVK_F5 , names[VMPC_KEY_F5] },
        { kVK_F6 , names[VMPC_KEY_F6] },
        { kVK_F7 , names[VMPC_KEY_F7] },
        { kVK_F8, names[VMPC_KEY_F8] },
        { kVK_F9, names[VMPC_KEY_F9] },
        { kVK_F10, names[VMPC_KEY_F10] },
        { kVK_F11, names[VMPC_KEY_F11] },
        { kVK_F12, names[VMPC_KEY_F12] },
        
        { kVK_Escape, names[VMPC_KEY_Escape] },
        { kVK_ANSI_Grave, names[VMPC_KEY_ANSI_Grave] },
        { kVK_ISO_Section, names[VMPC_KEY_ISO_Section] },
        { kVK_Tab, names[VMPC_KEY_Tab] },
        { kVK_CapsLock, names[VMPC_KEY_CapsLock] },
        { kVK_Shift, names[VMPC_KEY_Shift] },
        { kVK_Function, names[VMPC_KEY_Function] },
        { kVK_Control, names[VMPC_KEY_Control] },
        { kVK_Option, names[VMPC_KEY_Option] },
        { kVK_Command, names[VMPC_KEY_Command] },
        { kVK_ANSI_Minus, names[VMPC_KEY_ANSI_Minus] },
        { kVK_ANSI_Equal, names[VMPC_KEY_ANSI_Equal] },
        { kVK_Delete, names[VMPC_KEY_Delete] },
        { kVK_ANSI_LeftBracket, names[VMPC_KEY_ANSI_LeftBracket] },
        { kVK_ANSI_RightBracket, names[VMPC_KEY_ANSI_RightBracket] },
        { kVK_ANSI_Backslash, names[VMPC_KEY_ANSI_Backslash] },
        { kVK_ANSI_Semicolon, names[VMPC_KEY_ANSI_Semicolon] },
        { kVK_ANSI_Quote, names[VMPC_KEY_ANSI_Quote] },
        { kVK_Return, names[VMPC_KEY_Return] },
        { kVK_ANSI_Comma, names[VMPC_KEY_ANSI_Comma] },
        { kVK_ANSI_Period, names[VMPC_KEY_ANSI_Period] },
        { kVK_ANSI_Slash, names[VMPC_KEY_ANSI_Slash] },
        { kVK_RightShift, names[VMPC_KEY_RightShift] },
        { kVK_RightOption, names[VMPC_KEY_RightOption] },
        { kVK_Space, names[VMPC_KEY_Space] },
        
        { kVK_ANSI_Keypad0, names[VMPC_KEY_ANSI_Keypad0] },
        { kVK_ANSI_Keypad1, names[VMPC_KEY_ANSI_Keypad1] },
        { kVK_ANSI_Keypad2, names[VMPC_KEY_ANSI_Keypad2] },
        { kVK_ANSI_Keypad3, names[VMPC_KEY_ANSI_Keypad3] },
        { kVK_ANSI_Keypad4, names[VMPC_KEY_ANSI_Keypad4] },
        { kVK_ANSI_Keypad5, names[VMPC_KEY_ANSI_Keypad5] },
        { kVK_ANSI_Keypad6, names[VMPC_KEY_ANSI_Keypad6] },
        { kVK_ANSI_Keypad7, names[VMPC_KEY_ANSI_Keypad7] },
        { kVK_ANSI_Keypad8, names[VMPC_KEY_ANSI_Keypad8] },
        { kVK_ANSI_Keypad9, names[VMPC_KEY_ANSI_Keypad9] },
        
        { kVK_ANSI_0, names[VMPC_KEY_ANSI_0] },
        { kVK_ANSI_1, names[VMPC_KEY_ANSI_1] },
        { kVK_ANSI_2, names[VMPC_KEY_ANSI_2] },
        { kVK_ANSI_3, names[VMPC_KEY_ANSI_3] },
        { kVK_ANSI_4, names[VMPC_KEY_ANSI_4] },
        { kVK_ANSI_5, names[VMPC_KEY_ANSI_5] },
        { kVK_ANSI_6, names[VMPC_KEY_ANSI_6] },
        { kVK_ANSI_7, names[VMPC_KEY_ANSI_7] },
        { kVK_ANSI_8, names[VMPC_KEY_ANSI_8] },
        { kVK_ANSI_9, names[VMPC_KEY_ANSI_9] },
        
        { kVK_ANSI_A, names[VMPC_KEY_ANSI_A] },
        { kVK_ANSI_B, names[VMPC_KEY_ANSI_B] },
        { kVK_ANSI_C, names[VMPC_KEY_ANSI_C] },
        { kVK_ANSI_D, names[VMPC_KEY_ANSI_D] },
        { kVK_ANSI_E, names[VMPC_KEY_ANSI_E] },
        { kVK_ANSI_F, names[VMPC_KEY_ANSI_F] },
        { kVK_ANSI_G, names[VMPC_KEY_ANSI_G] },
        { kVK_ANSI_H, names[VMPC_KEY_ANSI_H] },
        { kVK_ANSI_I, names[VMPC_KEY_ANSI_I] },
        { kVK_ANSI_J, names[VMPC_KEY_ANSI_J] },
        { kVK_ANSI_K, names[VMPC_KEY_ANSI_K] },
        { kVK_ANSI_L, names[VMPC_KEY_ANSI_L] },
        { kVK_ANSI_M, names[VMPC_KEY_ANSI_M] },
        { kVK_ANSI_N, names[VMPC_KEY_ANSI_N] },
        { kVK_ANSI_O, names[VMPC_KEY_ANSI_O] },
        { kVK_ANSI_P, names[VMPC_KEY_ANSI_P] },
        { kVK_ANSI_Q, names[VMPC_KEY_ANSI_Q] },
        { kVK_ANSI_R, names[VMPC_KEY_ANSI_R] },
        { kVK_ANSI_S, names[VMPC_KEY_ANSI_S] },
        { kVK_ANSI_T, names[VMPC_KEY_ANSI_T] },
        { kVK_ANSI_U, names[VMPC_KEY_ANSI_U] },
        { kVK_ANSI_V, names[VMPC_KEY_ANSI_V] },
        { kVK_ANSI_W, names[VMPC_KEY_ANSI_W] },
        { kVK_ANSI_X, names[VMPC_KEY_ANSI_X] },
        { kVK_ANSI_Y, names[VMPC_KEY_ANSI_Y] },
        { kVK_ANSI_Z, names[VMPC_KEY_ANSI_Z] },
        
        { kVK_LeftArrow, names[VMPC_KEY_LeftArrow]  },
        { kVK_RightArrow, names[VMPC_KEY_RightArrow] },
        { kVK_UpArrow, names[VMPC_KEY_UpArrow]    },
        { kVK_DownArrow, names[VMPC_KEY_DownArrow]  },
        
        { kVK_ANSI_KeypadDecimal, names[VMPC_KEY_ANSI_KeypadDecimal] },
        { kVK_ANSI_KeypadMultiply, names[VMPC_KEY_ANSI_KeypadMultiply] },
        { kVK_ANSI_KeypadPlus, names[VMPC_KEY_ANSI_KeypadPlus] },
        { kVK_ANSI_KeypadClear, names[VMPC_KEY_ANSI_KeypadClear] },
        { kVK_ANSI_KeypadDivide, names[VMPC_KEY_ANSI_KeypadDivide] },
        { kVK_ANSI_KeypadEnter, names[VMPC_KEY_ANSI_KeypadEnter] },
        { kVK_ANSI_KeypadMinus, names[VMPC_KEY_ANSI_KeypadMinus] },
        { kVK_ANSI_KeypadEquals, names[VMPC_KEY_ANSI_KeypadEquals] },
        
        { kVK_Home, names[VMPC_KEY_Home] },
        { kVK_End, names[VMPC_KEY_End] },
        { kVK_PageUp, names[VMPC_KEY_PageUp] },
        { kVK_PageDown, names[VMPC_KEY_PageDown] }
        
#elif defined(__APPLE__) && TARGET_OS_IOS
        { UIKeyboardHIDUsageKeyboardF1, names[VMPC_KEY_F1] },
        { UIKeyboardHIDUsageKeyboardF2, names[VMPC_KEY_F2] },
        { UIKeyboardHIDUsageKeyboardF3, names[VMPC_KEY_F3] },
        { UIKeyboardHIDUsageKeyboardF4, names[VMPC_KEY_F4] },
        { UIKeyboardHIDUsageKeyboardF5, names[VMPC_KEY_F5] },
        { UIKeyboardHIDUsageKeyboardF6, names[VMPC_KEY_F6] },
        { UIKeyboardHIDUsageKeyboardF7, names[VMPC_KEY_F7] },
        { UIKeyboardHIDUsageKeyboardF8, names[VMPC_KEY_F8] },
        { UIKeyboardHIDUsageKeyboardF9, names[VMPC_KEY_F9] },
        { UIKeyboardHIDUsageKeyboardF10, names[VMPC_KEY_F10] },
        { UIKeyboardHIDUsageKeyboardF11, names[VMPC_KEY_F11] },
        { UIKeyboardHIDUsageKeyboardF12, names[VMPC_KEY_F12] },
        
        { UIKeyboardHIDUsageKeyboardEscape, names[VMPC_KEY_Escape] },
        { UIKeyboardHIDUsageKeyboardGraveAccentAndTilde, names[VMPC_KEY_ANSI_Grave] },
        { 0, names[VMPC_KEY_ISO_Section] }, // No corresponding value
        { UIKeyboardHIDUsageKeyboardTab, names[VMPC_KEY_Tab] },
        { UIKeyboardHIDUsageKeyboardCapsLock, names[VMPC_KEY_CapsLock] },
        { UIKeyboardHIDUsageKeyboardLeftShift, names[VMPC_KEY_Shift] },
        { 0, names[VMPC_KEY_Function] }, // No corresponding value
        { UIKeyboardHIDUsageKeyboardLeftControl, names[VMPC_KEY_Control] },
        { UIKeyboardHIDUsageKeyboardLeftAlt, names[VMPC_KEY_Option] },
        { UIKeyboardHIDUsageKeyboardLeftGUI, names[VMPC_KEY_Command] },
        { UIKeyboardHIDUsageKeyboardHyphen, names[VMPC_KEY_ANSI_Minus] },
        { UIKeyboardHIDUsageKeyboardEqualSign, names[VMPC_KEY_ANSI_Equal] },
        { UIKeyboardHIDUsageKeyboardDeleteOrBackspace, names[VMPC_KEY_Delete] },
        { UIKeyboardHIDUsageKeyboardOpenBracket, names[VMPC_KEY_ANSI_LeftBracket] },
        { UIKeyboardHIDUsageKeyboardCloseBracket, names[VMPC_KEY_ANSI_RightBracket] },
        { UIKeyboardHIDUsageKeyboardBackslash, names[VMPC_KEY_ANSI_Backslash] },
        { UIKeyboardHIDUsageKeyboardSemicolon, names[VMPC_KEY_ANSI_Semicolon] },
        { UIKeyboardHIDUsageKeyboardQuote, names[VMPC_KEY_ANSI_Quote] },
        { UIKeyboardHIDUsageKeyboardReturnOrEnter, names[VMPC_KEY_Return] },
        { UIKeyboardHIDUsageKeyboardComma, names[VMPC_KEY_ANSI_Comma] },
        { UIKeyboardHIDUsageKeyboardPeriod, names[VMPC_KEY_ANSI_Period] },
        { UIKeyboardHIDUsageKeyboardSlash, names[VMPC_KEY_ANSI_Slash] },
        { UIKeyboardHIDUsageKeyboardRightShift, names[VMPC_KEY_RightShift] },
        { UIKeyboardHIDUsageKeyboardRightAlt, names[VMPC_KEY_RightOption] },
        { UIKeyboardHIDUsageKeyboardSpacebar, names[VMPC_KEY_Space] },
        
        { UIKeyboardHIDUsageKeypad0, names[VMPC_KEY_ANSI_Keypad0] },
        { UIKeyboardHIDUsageKeypad1, names[VMPC_KEY_ANSI_Keypad1] },
        { UIKeyboardHIDUsageKeypad2, names[VMPC_KEY_ANSI_Keypad2] },
        { UIKeyboardHIDUsageKeypad3, names[VMPC_KEY_ANSI_Keypad3] },
        { UIKeyboardHIDUsageKeypad4, names[VMPC_KEY_ANSI_Keypad4] },
        { UIKeyboardHIDUsageKeypad5, names[VMPC_KEY_ANSI_Keypad5] },
        { UIKeyboardHIDUsageKeypad6, names[VMPC_KEY_ANSI_Keypad6] },
        { UIKeyboardHIDUsageKeypad7, names[VMPC_KEY_ANSI_Keypad7] },
        { UIKeyboardHIDUsageKeypad8, names[VMPC_KEY_ANSI_Keypad8] },
        { UIKeyboardHIDUsageKeypad9, names[VMPC_KEY_ANSI_Keypad9] },
        
        { UIKeyboardHIDUsageKeyboard0, names[VMPC_KEY_ANSI_0] },
        { UIKeyboardHIDUsageKeyboard1, names[VMPC_KEY_ANSI_1] },
        { UIKeyboardHIDUsageKeyboard2, names[VMPC_KEY_ANSI_2] },
        { UIKeyboardHIDUsageKeyboard3, names[VMPC_KEY_ANSI_3] },
        { UIKeyboardHIDUsageKeyboard4, names[VMPC_KEY_ANSI_4] },
        { UIKeyboardHIDUsageKeyboard5, names[VMPC_KEY_ANSI_5] },
        { UIKeyboardHIDUsageKeyboard6, names[VMPC_KEY_ANSI_6] },
        { UIKeyboardHIDUsageKeyboard7, names[VMPC_KEY_ANSI_7] },
        { UIKeyboardHIDUsageKeyboard8, names[VMPC_KEY_ANSI_8] },
        { UIKeyboardHIDUsageKeyboard9, names[VMPC_KEY_ANSI_9] },
        
        { UIKeyboardHIDUsageKeyboardQ, names[VMPC_KEY_ANSI_Q] },
        { UIKeyboardHIDUsageKeyboardW, names[VMPC_KEY_ANSI_W] },
        { UIKeyboardHIDUsageKeyboardE, names[VMPC_KEY_ANSI_E] },
        { UIKeyboardHIDUsageKeyboardR, names[VMPC_KEY_ANSI_R] },
        { UIKeyboardHIDUsageKeyboardT, names[VMPC_KEY_ANSI_T] },
        { UIKeyboardHIDUsageKeyboardY, names[VMPC_KEY_ANSI_Y] },
        { UIKeyboardHIDUsageKeyboardU, names[VMPC_KEY_ANSI_U] },
        { UIKeyboardHIDUsageKeyboardI, names[VMPC_KEY_ANSI_I] },
        { UIKeyboardHIDUsageKeyboardO, names[VMPC_KEY_ANSI_O] },
        { UIKeyboardHIDUsageKeyboardP, names[VMPC_KEY_ANSI_P] },
        { UIKeyboardHIDUsageKeyboardA, names[VMPC_KEY_ANSI_A] },
        { UIKeyboardHIDUsageKeyboardS, names[VMPC_KEY_ANSI_S] },
        { UIKeyboardHIDUsageKeyboardD, names[VMPC_KEY_ANSI_D] },
        { UIKeyboardHIDUsageKeyboardF, names[VMPC_KEY_ANSI_F] },
        { UIKeyboardHIDUsageKeyboardG, names[VMPC_KEY_ANSI_G] },
        { UIKeyboardHIDUsageKeyboardH, names[VMPC_KEY_ANSI_H] },
        { UIKeyboardHIDUsageKeyboardJ, names[VMPC_KEY_ANSI_J] },
        { UIKeyboardHIDUsageKeyboardK, names[VMPC_KEY_ANSI_K] },
        { UIKeyboardHIDUsageKeyboardL, names[VMPC_KEY_ANSI_L] },
        { UIKeyboardHIDUsageKeyboardZ, names[VMPC_KEY_ANSI_Z] },
        { UIKeyboardHIDUsageKeyboardX, names[VMPC_KEY_ANSI_X] },
        { UIKeyboardHIDUsageKeyboardC, names[VMPC_KEY_ANSI_C] },
        { UIKeyboardHIDUsageKeyboardV, names[VMPC_KEY_ANSI_V] },
        { UIKeyboardHIDUsageKeyboardB, names[VMPC_KEY_ANSI_B] },
        { UIKeyboardHIDUsageKeyboardN, names[VMPC_KEY_ANSI_N] },
        { UIKeyboardHIDUsageKeyboardM, names[VMPC_KEY_ANSI_M] },
        
        { UIKeyboardHIDUsageKeyboardLeftArrow, names[VMPC_KEY_LeftArrow]  },
        { UIKeyboardHIDUsageKeyboardRightArrow, names[VMPC_KEY_RightArrow] },
        { UIKeyboardHIDUsageKeyboardUpArrow, names[VMPC_KEY_UpArrow]    },
        { UIKeyboardHIDUsageKeyboardDownArrow, names[VMPC_KEY_DownArrow]  },
        
        { 0, names[VMPC_KEY_ANSI_KeypadDecimal] },
        { UIKeyboardHIDUsageKeypadAsterisk, names[VMPC_KEY_ANSI_KeypadMultiply] },
        { UIKeyboardHIDUsageKeypadPlus, names[VMPC_KEY_ANSI_KeypadPlus] },
        { 0, names[VMPC_KEY_ANSI_KeypadClear] }, // No corresponding value
        { UIKeyboardHIDUsageKeypadSlash, names[VMPC_KEY_ANSI_KeypadDivide] },
        { UIKeyboardHIDUsageKeypadEnter, names[VMPC_KEY_ANSI_KeypadEnter] },
        { UIKeyboardHIDUsageKeypadHyphen, names[VMPC_KEY_ANSI_KeypadMinus] },
        { UIKeyboardHIDUsageKeypadEqualSign, names[VMPC_KEY_ANSI_KeypadEquals] },
        
        { UIKeyboardHIDUsageKeyboardHome, names[VMPC_KEY_Home] },
        { UIKeyboardHIDUsageKeyboardPageUp, names[VMPC_KEY_PageUp] },
        { UIKeyboardHIDUsageKeyboardEnd, names[VMPC_KEY_End] },
        { UIKeyboardHIDUsageKeyboardPageDown, names[VMPC_KEY_PageDown] }

        
#elif defined _WIN32

        { VK_F1, names[VMPC_KEY_F1] },
        { VK_F2, names[VMPC_KEY_F2] },
        { VK_F3, names[VMPC_KEY_F3] },
        { VK_F4, names[VMPC_KEY_F4] },
        { VK_F5, names[VMPC_KEY_F5] },
        { VK_F6, names[VMPC_KEY_F6] },
        { VK_F7, names[VMPC_KEY_F7] },
        { VK_F8, names[VMPC_KEY_F8] },
        { VK_F9, names[VMPC_KEY_F9] },
        { VK_F10, names[VMPC_KEY_F10] },
        { VK_F11, names[VMPC_KEY_F11] },
        { VK_F12, names[VMPC_KEY_F12] },
        
        { VK_ESCAPE, names[VMPC_KEY_Escape] },
        { VK_TAB, names[VMPC_KEY_Tab] },
        { VK_CAPITAL, names[VMPC_KEY_CapsLock] },
        { VK_SHIFT, names[VMPC_KEY_Shift] },
        { VK_LCONTROL, names[VMPC_KEY_Control] },
        { VK_LMENU, names[VMPC_KEY_Option] },
        { VK_OEM_MINUS, names[VMPC_KEY_ANSI_Minus] },
        { VK_OEM_PLUS, names[VMPC_KEY_ANSI_Equal] },
        { VK_INSERT, names[VMPC_KEY_Insert] },
        { VK_DELETE, names[VMPC_KEY_Delete] },
        { VK_RETURN, names[VMPC_KEY_Return] },
        { VK_OEM_COMMA, names[VMPC_KEY_ANSI_Comma] },
        { VK_OEM_PERIOD, names[VMPC_KEY_ANSI_Period] },
        { VK_SPACE, names[VMPC_KEY_Space] },

        { VK_OEM_1, names[VMPC_KEY_ANSI_Semicolon] },
        { VK_OEM_2, names[VMPC_KEY_ANSI_Slash] },
        { VK_OEM_3, names[VMPC_KEY_ANSI_Grave] },
        { VK_OEM_4, names[VMPC_KEY_ANSI_LeftBracket] },
        { VK_OEM_6, names[VMPC_KEY_ANSI_RightBracket] },
        { VK_OEM_5, names[VMPC_KEY_ANSI_Backslash] },
        { VK_OEM_7, names[VMPC_KEY_ANSI_Quote] },

        { VK_NUMPAD0, names[VMPC_KEY_ANSI_Keypad0] },
        { VK_NUMPAD1, names[VMPC_KEY_ANSI_Keypad1] },
        { VK_NUMPAD2, names[VMPC_KEY_ANSI_Keypad2] },
        { VK_NUMPAD3, names[VMPC_KEY_ANSI_Keypad3] },
        { VK_NUMPAD4, names[VMPC_KEY_ANSI_Keypad4] },
        { VK_NUMPAD5, names[VMPC_KEY_ANSI_Keypad5] },
        { VK_NUMPAD6, names[VMPC_KEY_ANSI_Keypad6] },
        { VK_NUMPAD7, names[VMPC_KEY_ANSI_Keypad7] },
        { VK_NUMPAD8, names[VMPC_KEY_ANSI_Keypad8] },
        { VK_NUMPAD9, names[VMPC_KEY_ANSI_Keypad9] },
        
        { '0', names[VMPC_KEY_ANSI_0] },
        { '1', names[VMPC_KEY_ANSI_1] },
        { '2', names[VMPC_KEY_ANSI_2] },
        { '3', names[VMPC_KEY_ANSI_3] },
        { '4', names[VMPC_KEY_ANSI_4] },
        { '5', names[VMPC_KEY_ANSI_5] },
        { '6', names[VMPC_KEY_ANSI_6] },
        { '7', names[VMPC_KEY_ANSI_7] },
        { '8', names[VMPC_KEY_ANSI_8] },
        { '9', names[VMPC_KEY_ANSI_9] },
        
        { 'A', names[VMPC_KEY_ANSI_A] },
        { 'B', names[VMPC_KEY_ANSI_B] },
        { 'C', names[VMPC_KEY_ANSI_C] },
        { 'D', names[VMPC_KEY_ANSI_D] },
        { 'E', names[VMPC_KEY_ANSI_E] },
        { 'F', names[VMPC_KEY_ANSI_F] },
        { 'G', names[VMPC_KEY_ANSI_G] },
        { 'H', names[VMPC_KEY_ANSI_H] },
        { 'I', names[VMPC_KEY_ANSI_I] },
        { 'J', names[VMPC_KEY_ANSI_J] },
        { 'K', names[VMPC_KEY_ANSI_K] },
        { 'L', names[VMPC_KEY_ANSI_L] },
        { 'M', names[VMPC_KEY_ANSI_M] },
        { 'N', names[VMPC_KEY_ANSI_N] },
        { 'O', names[VMPC_KEY_ANSI_O] },
        { 'P', names[VMPC_KEY_ANSI_P] },
        { 'Q', names[VMPC_KEY_ANSI_Q] },
        { 'R', names[VMPC_KEY_ANSI_R] },
        { 'S', names[VMPC_KEY_ANSI_S] },
        { 'T', names[VMPC_KEY_ANSI_T] },
        { 'U', names[VMPC_KEY_ANSI_U] },
        { 'V', names[VMPC_KEY_ANSI_V] },
        { 'W', names[VMPC_KEY_ANSI_W] },
        { 'X', names[VMPC_KEY_ANSI_X] },
        { 'Y', names[VMPC_KEY_ANSI_Y] },
        { 'Z', names[VMPC_KEY_ANSI_Z] },
        
        { VK_LEFT, names[VMPC_KEY_LeftArrow]  },
        { VK_RIGHT, names[VMPC_KEY_RightArrow] },
        { VK_UP, names[VMPC_KEY_UpArrow]    },
        { VK_DOWN, names[VMPC_KEY_DownArrow]  },
        
        { VK_DECIMAL, names[VMPC_KEY_ANSI_KeypadDecimal] },
        { VK_MULTIPLY, names[VMPC_KEY_ANSI_KeypadMultiply] },
        { VK_ADD, names[VMPC_KEY_ANSI_KeypadPlus] },
        { VK_CLEAR, names[VMPC_KEY_ANSI_KeypadClear] },
        { VK_DIVIDE, names[VMPC_KEY_ANSI_KeypadDivide] },
        { VK_SUBTRACT, names[VMPC_KEY_ANSI_KeypadMinus] },
        
        { VK_HOME, names[VMPC_KEY_Home] },
        { VK_PRIOR, names[VMPC_KEY_PageUp] },
        { VK_END, names[VMPC_KEY_End] },
        { VK_NEXT, names[VMPC_KEY_PageDown] }
        
#elif defined __linux__

        { XK_F1, names[VMPC_KEY_F1] },
        { XK_F2, names[VMPC_KEY_F2] },
        { XK_F3, names[VMPC_KEY_F3] },
        { XK_F4, names[VMPC_KEY_F4] },
        { XK_F5, names[VMPC_KEY_F5] },
        { XK_F6, names[VMPC_KEY_F6]},
        { XK_F7, names[VMPC_KEY_F7] },
        { XK_F8, names[VMPC_KEY_F8] },
        { XK_F9, names[VMPC_KEY_F9] },
        { XK_F10, names[VMPC_KEY_F10] },
        { XK_F11, names[VMPC_KEY_F11] },
        { XK_F12, names[VMPC_KEY_F12] },
        
        { XK_Escape, names[VMPC_KEY_Escape] },
        { XK_Tab, names[VMPC_KEY_Tab] },
        { XK_Caps_Lock, names[VMPC_KEY_CapsLock] },
        { XK_Shift_L, names[VMPC_KEY_Shift] },
        { XK_Control_L, names[VMPC_KEY_Control] },
        { XK_Alt_L, names[VMPC_KEY_Option] },
        { XK_minus, names[VMPC_KEY_ANSI_Minus] },
        { XK_equal, names[VMPC_KEY_ANSI_Equal] },
        { XK_Insert, names[VMPC_KEY_Insert] },
        { XK_Delete, names[VMPC_KEY_Delete] },
        { XK_bracketleft, names[VMPC_KEY_ANSI_LeftBracket] },
        { XK_bracketright, names[VMPC_KEY_ANSI_RightBracket] },
        { XK_backslash, names[VMPC_KEY_ANSI_Backslash] },
        { XK_semicolon, names[VMPC_KEY_ANSI_Semicolon] },
        { XK_apostrophe, names[VMPC_KEY_ANSI_Quote] },
        { XK_Return, names[VMPC_KEY_Return] },
        { XK_comma, names[VMPC_KEY_ANSI_Comma] },
        { XK_period, names[VMPC_KEY_ANSI_Period] },
        { XK_slash, names[VMPC_KEY_ANSI_Slash] },
        { XK_space, names[VMPC_KEY_Space] },
        
        { XK_0, names[VMPC_KEY_ANSI_0] },
        { XK_1, names[VMPC_KEY_ANSI_1] },
        { XK_2, names[VMPC_KEY_ANSI_2] },
        { XK_3, names[VMPC_KEY_ANSI_3] },
        { XK_4, names[VMPC_KEY_ANSI_4] },
        { XK_5, names[VMPC_KEY_ANSI_5] },
        { XK_6, names[VMPC_KEY_ANSI_6] },
        { XK_7, names[VMPC_KEY_ANSI_7] },
        { XK_8, names[VMPC_KEY_ANSI_8] },
        { XK_9, names[VMPC_KEY_ANSI_9] },
        
        { XK_a, names[VMPC_KEY_ANSI_A] },
        { XK_b, names[VMPC_KEY_ANSI_B] },
        { XK_c, names[VMPC_KEY_ANSI_C] },
        { XK_d, names[VMPC_KEY_ANSI_D] },
        { XK_e, names[VMPC_KEY_ANSI_E] },
        { XK_f, names[VMPC_KEY_ANSI_F] },
        { XK_g, names[VMPC_KEY_ANSI_G] },
        { XK_h, names[VMPC_KEY_ANSI_H] },
        { XK_i, names[VMPC_KEY_ANSI_I] },
        { XK_j, names[VMPC_KEY_ANSI_J] },
        { XK_k, names[VMPC_KEY_ANSI_K] },
        { XK_l, names[VMPC_KEY_ANSI_L] },
        { XK_m, names[VMPC_KEY_ANSI_M] },
        { XK_n, names[VMPC_KEY_ANSI_N] },
        { XK_o, names[VMPC_KEY_ANSI_O] },
        { XK_p, names[VMPC_KEY_ANSI_P] },
        { XK_q, names[VMPC_KEY_ANSI_Q] },
        { XK_r, names[VMPC_KEY_ANSI_R] },
        { XK_s, names[VMPC_KEY_ANSI_S] },
        { XK_t, names[VMPC_KEY_ANSI_T] },
        { XK_u, names[VMPC_KEY_ANSI_U] },
        { XK_v, names[VMPC_KEY_ANSI_V] },
        { XK_w, names[VMPC_KEY_ANSI_W] },
        { XK_x, names[VMPC_KEY_ANSI_X] },
        { XK_y, names[VMPC_KEY_ANSI_Y] },
        { XK_z, names[VMPC_KEY_ANSI_Z] },
        
        { XK_Left, names[VMPC_KEY_LeftArrow]  },
        { XK_Right, names[VMPC_KEY_RightArrow] },
        { XK_Up, names[VMPC_KEY_UpArrow]    },
        { XK_Down, names[VMPC_KEY_DownArrow]  },
        
        { XK_Home, names[VMPC_KEY_Home] },
        { XK_Page_Up, names[VMPC_KEY_PageUp] },
        { XK_End, names[VMPC_KEY_End] },
        { XK_Page_Down, names[VMPC_KEY_PageDown] }
#endif
        
    };
    
};
}
