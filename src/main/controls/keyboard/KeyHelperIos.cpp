#if __APPLE__
#include <TargetConditionals.h>
#if TARGET_OS_IOS

#include "KeyHelper.hpp"

#include "UIKeyConstants.hpp"

using namespace mpc::controls::keyboard;

const std::vector<const std::pair<const std::string, const int>> KeyHelper::keys =
{
    std::pair("none", -1),
    std::pair("escape", UIKeyConstants::UIKeyboardHIDUsageKeyboardEscape),
    std::pair("f1", UIKeyConstants::UIKeyboardHIDUsageKeyboardF1),
    std::pair("f2", UIKeyConstants::UIKeyboardHIDUsageKeyboardF2),
    std::pair("f3", UIKeyConstants::UIKeyboardHIDUsageKeyboardF3),
    std::pair("f4", UIKeyConstants::UIKeyboardHIDUsageKeyboardF4),
    std::pair("f5", UIKeyConstants::UIKeyboardHIDUsageKeyboardF5),
    std::pair("f6", UIKeyConstants::UIKeyboardHIDUsageKeyboardF6),
    std::pair("f7", UIKeyConstants::UIKeyboardHIDUsageKeyboardF7),
    std::pair("f8", UIKeyConstants::UIKeyboardHIDUsageKeyboardF8),
    std::pair("f9", UIKeyConstants::UIKeyboardHIDUsageKeyboardF9),
    std::pair("f10", UIKeyConstants::UIKeyboardHIDUsageKeyboardF10),
    std::pair("f11", UIKeyConstants::UIKeyboardHIDUsageKeyboardF11),
    std::pair("f12", UIKeyConstants::UIKeyboardHIDUsageKeyboardF12),
    std::pair("f13", UIKeyConstants::UIKeyboardHIDUsageKeyboardF13),
    std::pair("f14", UIKeyConstants::UIKeyboardHIDUsageKeyboardF14),
    std::pair("f15", UIKeyConstants::UIKeyboardHIDUsageKeyboardF15),
    std::pair("f16", UIKeyConstants::UIKeyboardHIDUsageKeyboardF16),
    std::pair("f17", UIKeyConstants::UIKeyboardHIDUsageKeyboardF17),
    std::pair("f18", UIKeyConstants::UIKeyboardHIDUsageKeyboardF18),
    std::pair("f19", UIKeyConstants::UIKeyboardHIDUsageKeyboardF19),
    std::pair("f20", UIKeyConstants::UIKeyboardHIDUsageKeyboardF20),
    std::pair("f21", UIKeyConstants::UIKeyboardHIDUsageKeyboardF21),
    std::pair("f22", UIKeyConstants::UIKeyboardHIDUsageKeyboardF22),
    std::pair("f23", UIKeyConstants::UIKeyboardHIDUsageKeyboardF23),
    std::pair("f24", UIKeyConstants::UIKeyboardHIDUsageKeyboardF24),
    std::pair("zenkaku/hankaku", UIKeyConstants::UIKeyboardHIDUsageKeyboardZenkakuHankakuKanji),
    std::pair("kanji", -1),
    std::pair("tab", UIKeyConstants::UIKeyboardHIDUsageKeyboardTab),
    std::pair("\t", -1),
    std::pair("caps lock", -1),
    std::pair("left shift", UIKeyConstants::UIKeyboardHIDUsageKeyboardLeftShift),
    std::pair("right shift", UIKeyConstants::UIKeyboardHIDUsageKeyboardRightShift),
    std::pair("shift", UIKeyConstants::UIKeyboardHIDUsageKeyboardLeftShift),
    std::pair("left control", UIKeyConstants::UIKeyboardHIDUsageKeyboardLeftControl),
    std::pair("right control", UIKeyConstants::UIKeyboardHIDUsageKeyboardRightControl),
    std::pair("control", UIKeyConstants::UIKeyboardHIDUsageKeyboardLeftControl),
    std::pair("left alternate", UIKeyConstants::UIKeyboardHIDUsageKeyboardLeftAlt),
    std::pair("left option", UIKeyConstants::UIKeyboardHIDUsageKeyboardLeftAlt),
    std::pair("right alternate", UIKeyConstants::UIKeyboardHIDUsageKeyboardRightAlt),
    std::pair("right option", UIKeyConstants::UIKeyboardHIDUsageKeyboardRightAlt),
    std::pair("alternate", UIKeyConstants::UIKeyboardHIDUsageKeyboardLeftAlt),
    std::pair("option", UIKeyConstants::UIKeyboardHIDUsageKeyboardLeftAlt),
    std::pair("left meta", -1),
    std::pair("right meta", -8),
    std::pair("meta", -7),
    std::pair("muhenkan", -9),
    std::pair("international5", -9),
    std::pair("henkan", -10),
    std::pair("international4", -10),
    std::pair("katakana hiragana", -11),
    std::pair("international2", -11),
    std::pair("super", -1),
    std::pair("windows", -1),
    std::pair("command", -1),
    std::pair("left windows", -1),
    std::pair("left gui", -1),
    std::pair("right windows", -1),
    std::pair("right gui", -1),
    std::pair("application", -37),
    std::pair("menu", -12),
    std::pair("backspace", UIKeyConstants::UIKeyboardHIDUsageKeyboardDeleteOrBackspace),
    std::pair("enter", UIKeyConstants::UIKeyboardHIDUsageKeyboardReturnOrEnter),
    std::pair("\n", UIKeyConstants::UIKeyboardHIDUsageKeyboardReturnOrEnter),
    std::pair("space", UIKeyConstants::UIKeyboardHIDUsageKeyboardSpacebar),
    std::pair(" ", UIKeyConstants::UIKeyboardHIDUsageKeyboardSpacebar),
    std::pair("1", UIKeyConstants::UIKeyboardHIDUsageKeyboard1),
    std::pair("2", UIKeyConstants::UIKeyboardHIDUsageKeyboard2),
    std::pair("3", UIKeyConstants::UIKeyboardHIDUsageKeyboard3),
    std::pair("4", UIKeyConstants::UIKeyboardHIDUsageKeyboard4),
    std::pair("5", UIKeyConstants::UIKeyboardHIDUsageKeyboard5),
    std::pair("6", UIKeyConstants::UIKeyboardHIDUsageKeyboard6),
    std::pair("7", UIKeyConstants::UIKeyboardHIDUsageKeyboard7),
    std::pair("8", UIKeyConstants::UIKeyboardHIDUsageKeyboard8),
    std::pair("9", UIKeyConstants::UIKeyboardHIDUsageKeyboard9),
    std::pair("0", UIKeyConstants::UIKeyboardHIDUsageKeyboard0),
    std::pair("a", UIKeyConstants::UIKeyboardHIDUsageKeyboardA),
    std::pair("b", UIKeyConstants::UIKeyboardHIDUsageKeyboardB),
    std::pair("c", UIKeyConstants::UIKeyboardHIDUsageKeyboardC),
    std::pair("d", UIKeyConstants::UIKeyboardHIDUsageKeyboardD),
    std::pair("e", UIKeyConstants::UIKeyboardHIDUsageKeyboardE),
    std::pair("f", UIKeyConstants::UIKeyboardHIDUsageKeyboardF),
    std::pair("g", UIKeyConstants::UIKeyboardHIDUsageKeyboardG),
    std::pair("h", UIKeyConstants::UIKeyboardHIDUsageKeyboardH),
    std::pair("i", UIKeyConstants::UIKeyboardHIDUsageKeyboardI),
    std::pair("j", UIKeyConstants::UIKeyboardHIDUsageKeyboardJ),
    std::pair("k", UIKeyConstants::UIKeyboardHIDUsageKeyboardK),
    std::pair("l", UIKeyConstants::UIKeyboardHIDUsageKeyboardL),
    std::pair("m", UIKeyConstants::UIKeyboardHIDUsageKeyboardM),
    std::pair("n", UIKeyConstants::UIKeyboardHIDUsageKeyboardN),
    std::pair("o", UIKeyConstants::UIKeyboardHIDUsageKeyboardO),
    std::pair("p", UIKeyConstants::UIKeyboardHIDUsageKeyboardP),
    std::pair("q", UIKeyConstants::UIKeyboardHIDUsageKeyboardQ),
    std::pair("r", UIKeyConstants::UIKeyboardHIDUsageKeyboardR),
    std::pair("s", UIKeyConstants::UIKeyboardHIDUsageKeyboardS),
    std::pair("t", UIKeyConstants::UIKeyboardHIDUsageKeyboardT),
    std::pair("u", UIKeyConstants::UIKeyboardHIDUsageKeyboardU),
    std::pair("v", UIKeyConstants::UIKeyboardHIDUsageKeyboardV),
    std::pair("w", UIKeyConstants::UIKeyboardHIDUsageKeyboardW),
    std::pair("x", UIKeyConstants::UIKeyboardHIDUsageKeyboardX),
    std::pair("y", UIKeyConstants::UIKeyboardHIDUsageKeyboardY),
    std::pair("z", UIKeyConstants::UIKeyboardHIDUsageKeyboardZ),
    std::pair("minus", UIKeyConstants::UIKeyboardHIDUsageKeyboardHyphen),
    std::pair("equals", UIKeyConstants::UIKeyboardHIDUsageKeyboardEqualSign),
    std::pair("-", UIKeyConstants::UIKeyboardHIDUsageKeypadHyphen),
    std::pair("hat", -1),
    std::pair("^", -1),
    std::pair("yen", -1),
    std::pair("\\", -1),
    std::pair("atmark", -1),
    std::pair("@", -1),
    std::pair("left square bracket", UIKeyConstants::UIKeyboardHIDUsageKeyboardOpenBracket),
    std::pair("[", UIKeyConstants::UIKeyboardHIDUsageKeyboardOpenBracket),
    std::pair("semicolon", UIKeyConstants::UIKeyboardHIDUsageKeyboardSemicolon),
    std::pair(";", UIKeyConstants::UIKeyboardHIDUsageKeyboardSemicolon),
    std::pair("quote", UIKeyConstants::UIKeyboardHIDUsageKeyboardQuote),
    std::pair(":", -1),
    std::pair("right square bracket", UIKeyConstants::UIKeyboardHIDUsageKeyboardCloseBracket),
    std::pair("]", UIKeyConstants::UIKeyboardHIDUsageKeyboardCloseBracket),
    std::pair("comma", UIKeyConstants::UIKeyboardHIDUsageKeyboardComma),
    std::pair(",", UIKeyConstants::UIKeyboardHIDUsageKeyboardComma),
    std::pair("dot", UIKeyConstants::UIKeyboardHIDUsageKeyboardPeriod),
    std::pair(".", UIKeyConstants::UIKeyboardHIDUsageKeyboardPeriod),
    std::pair("slash", UIKeyConstants::UIKeyboardHIDUsageKeyboardSlash),
    std::pair("/", UIKeyConstants::UIKeyboardHIDUsageKeyboardSlash),
    std::pair("backslash", UIKeyConstants::UIKeyboardHIDUsageKeyboardBackslash),
    std::pair("\\", -UIKeyConstants::UIKeyboardHIDUsageKeyboardBackslash),
    std::pair("print screen", -13),
    std::pair("scroll lock", -14),
    std::pair("pause", -15),
    std::pair("insert", UIKeyConstants::UIKeyboardHIDUsageKeyboardInsert),
    std::pair("delete", UIKeyConstants::UIKeyboardHIDUsageKeyboardDeleteForward),
    std::pair("home", UIKeyConstants::UIKeyboardHIDUsageKeyboardHome),
    std::pair("end", UIKeyConstants::UIKeyboardHIDUsageKeyboardEnd),
    std::pair("page up", UIKeyConstants::UIKeyboardHIDUsageKeyboardPageUp),
    std::pair("page down", UIKeyConstants::UIKeyboardHIDUsageKeyboardPageDown),
    std::pair("up", UIKeyConstants::UIKeyboardHIDUsageKeyboardUpArrow),
    std::pair("left", UIKeyConstants::UIKeyboardHIDUsageKeyboardLeftArrow),
    std::pair("down", UIKeyConstants::UIKeyboardHIDUsageKeyboardDownArrow),
    std::pair("right", UIKeyConstants::UIKeyboardHIDUsageKeyboardRightArrow),
    std::pair("num lock", -18),
    std::pair("num slash", -1),
    std::pair("num asterisk", -1),
    std::pair("num minus", -1),
    std::pair("num plus", -1),
    std::pair("num enter", -1),
    std::pair("num 7", -1),
    std::pair("num 8", -1),
    std::pair("num 9", -1),
    std::pair("num 4", -1),
    std::pair("num 5", -1),
    std::pair("num 6", -1),
    std::pair("num 1", -1),
    std::pair("num 2", -1),
    std::pair("num 3", -1),
    std::pair("num 0", -1),
    std::pair("num comma", -1),
    std::pair("num dot", -1),
    std::pair("num equal", -1),
    std::pair("num plusminus", -19),
    std::pair("num left paren", -20),
    std::pair("num right paren", -21),
    std::pair("num left brace", -38),
    std::pair("num right brace", -39),
    std::pair("num tab", -40),
    std::pair("num backspace", -41),
    std::pair("num a", -42),
    std::pair("num b", -43),
    std::pair("num c", -44),
    std::pair("num d", -45),
    std::pair("num e", -46),
    std::pair("num f", -47),
    std::pair("num xor", -48),
    std::pair("num ^", -49),
    std::pair("num %", -50),
    std::pair("num <", -51),
    std::pair("num >", -52),
    std::pair("num &", -53),
    std::pair("num &&", -54),
    std::pair("num |", -55),
    std::pair("num ||", -56),
    std::pair("num :", -57),
    std::pair("num #", -58),
    std::pair("num space", -59),
    std::pair("num @", -60),
    std::pair("num !", -61),
    std::pair("num memory store", -62),
    std::pair("num memory recall", -63),
    std::pair("num memory clear", -64),
    std::pair("num memory add", -65),
    std::pair("num memory subtract", -66),
    std::pair("num memory multiply", -67),
    std::pair("num memory divide", -68),
    std::pair("num clear", -69),
    std::pair("num clear entry", -70),
    std::pair("num binary", -71),
    std::pair("num octal", -72),
    std::pair("num decimal", -73),
    std::pair("num hexadecimal", -74),
    std::pair("mute", -1),
    std::pair("volume down", -1),
    std::pair("volume up", -1),
    std::pair("power", -22),
    std::pair("sleep", -23),
    std::pair("wake up", -24),
    std::pair("screen lock", -25),
    std::pair("www", -26),
    std::pair("mail", -27),
    std::pair("play pause", -28),
    std::pair("next song", -29),
    std::pair("previous song", -30),
    std::pair("wlan", -31),
    std::pair("bluetooth", -32),
    std::pair("brightness down", -33),
    std::pair("brightness up", -34),
    std::pair("display off", -35),
    std::pair("function", -1),
    std::pair("eisuu", 0x66),
    std::pair("lang2", 0x66),
    std::pair("kana kana", 0x68),
    std::pair("lang1", 0x68),
    std::pair("lang3", -75),
    std::pair("lang4", -76),
    std::pair("lang5", -77),
    std::pair("lang6", -78),
    std::pair("lang7", -79),
    std::pair("lang8", -80),
    std::pair("lang9", -81),
    std::pair("international1", -82),
    std::pair("international3", -83),
    std::pair("international6", -84),
    std::pair("international7", -85),
    std::pair("international8", -86),
    std::pair("international9", -87),
    std::pair("alternate erase", -88),
    std::pair("cancel", -89),
    std::pair("clear", -90),
    std::pair("prior", -91),
    std::pair("return", -92),
    std::pair("separator", -93),
    std::pair("out", -94),
    std::pair("oper", -95),
    std::pair("clear/again", -96),
    std::pair("exsel", -97),
    std::pair("num 00", -98),
    std::pair("num 000", -99),
    std::pair("thousands separator", -100),
    std::pair("decimal separator", -101),
    std::pair("currency unit", -102),
    std::pair("currency sub-unit", -103)
};

#endif // TARGET_OS_IOS
#endif // __APPLE__
