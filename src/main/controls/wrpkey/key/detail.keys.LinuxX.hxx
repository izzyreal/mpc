#pragma once

keys_element_t keys[] =
{ std::make_tuple("none", -1)
, std::make_tuple("escape", XK_Escape)
, std::make_tuple("f1", XK_F1)
, std::make_tuple("f2", XK_F2)
, std::make_tuple("f3", XK_F3)
, std::make_tuple("f4", XK_F4)
, std::make_tuple("f5", XK_F5)
, std::make_tuple("f6", XK_F6)
, std::make_tuple("f7", XK_F7)
, std::make_tuple("f8", XK_F8)
, std::make_tuple("f9", XK_F9)
, std::make_tuple("f10", XK_F10)
, std::make_tuple("f11", XK_F11)
, std::make_tuple("f12", XK_F12)
, std::make_tuple("tab", XK_Tab)
, std::make_tuple("\t", XK_Tab)
, std::make_tuple("caps lock", XK_Caps_Lock)
, std::make_tuple("left shift", XK_Shift_L)
, std::make_tuple("right shift", XK_Shift_R)
, std::make_tuple("shift", XK_Shift_L)
, std::make_tuple("left control", XK_Control_L)
, std::make_tuple("right control", XK_Control_R)
, std::make_tuple("control", XK_Control_L)
, std::make_tuple("left alternate", XK_Alt_L)
, std::make_tuple("right alternate", XK_Alt_R)
, std::make_tuple("alternate", XK_Alt_L)
, std::make_tuple("left meta", XK_Meta_L)
, std::make_tuple("right_meta", XK_Meta_R)
, std::make_tuple("meta", XK_Meta_L)
, std::make_tuple("muhenkan", XK_Muhenkan)
, std::make_tuple("henkan", XK_Henkan)
, std::make_tuple("katakana hiragana", XK_Hiragana_Katakana)
, std::make_tuple("windows", XK_Super_L)
, std::make_tuple("left windows", XK_Super_L)
, std::make_tuple("right windows", XK_Super_R)
, std::make_tuple("menu", XK_Menu)
, std::make_tuple("backspace", XK_BackSpace)
, std::make_tuple("enter", XK_Return)
, std::make_tuple("space", XK_space)
, std::make_tuple("1", XK_1)
, std::make_tuple("2", XK_2)
, std::make_tuple("3", XK_3)
, std::make_tuple("4", XK_4)
, std::make_tuple("5", XK_5)
, std::make_tuple("6", XK_6)
, std::make_tuple("7", XK_7)
, std::make_tuple("8", XK_8)
, std::make_tuple("9", XK_9)
, std::make_tuple("0", XK_0)
, std::make_tuple("a", XK_a)
, std::make_tuple("b", XK_b)
, std::make_tuple("c", XK_c)
, std::make_tuple("d", XK_d)
, std::make_tuple("e", XK_e)
, std::make_tuple("f", XK_f)
, std::make_tuple("g", XK_g)
, std::make_tuple("h", XK_h)
, std::make_tuple("i", XK_i)
, std::make_tuple("j", XK_j)
, std::make_tuple("k", XK_k)
, std::make_tuple("l", XK_l)
, std::make_tuple("m", XK_m)
, std::make_tuple("n", XK_n)
, std::make_tuple("o", XK_o)
, std::make_tuple("p", XK_p)
, std::make_tuple("q", XK_q)
, std::make_tuple("r", XK_r)
, std::make_tuple("s", XK_s)
, std::make_tuple("t", XK_t)
, std::make_tuple("u", XK_u)
, std::make_tuple("v", XK_v)
, std::make_tuple("w", XK_w)
, std::make_tuple("x", XK_x)
, std::make_tuple("y", XK_y)
, std::make_tuple("z", XK_z)
, std::make_tuple("minus", XK_minus)
, std::make_tuple("-", XK_minus)
, std::make_tuple("equals", XK_equal)
, std::make_tuple("left square bracket", XK_bracketleft)
, std::make_tuple("[", XK_bracketleft)
, std::make_tuple("semicolon", XK_semicolon)
, std::make_tuple(";", XK_semicolon)
, std::make_tuple("quote", XK_apostrophe)
, std::make_tuple("colon", XK_colon)
, std::make_tuple(":", XK_colon)
, std::make_tuple("right square bracket", XK_bracketright)
, std::make_tuple("]", XK_bracketright)
, std::make_tuple("comma", XK_comma)
, std::make_tuple(",", XK_comma)
, std::make_tuple("dot", XK_period)
, std::make_tuple(".", XK_period)
, std::make_tuple("slash", XK_slash)
, std::make_tuple("/", XK_slash)
, std::make_tuple("backslash", XK_backslash)
, std::make_tuple("\\", XK_backslash)
, std::make_tuple("insert", XK_Insert)
, std::make_tuple("delete", XK_Delete)
, std::make_tuple("home", XK_Home)
, std::make_tuple("end", XK_End)
, std::make_tuple("page up", XK_Page_Up)
, std::make_tuple("page down", XK_Page_Down)
, std::make_tuple("up", XK_Up)
, std::make_tuple("left", XK_Left)
, std::make_tuple("down", XK_Down)
, std::make_tuple("right", XK_Right)
};
