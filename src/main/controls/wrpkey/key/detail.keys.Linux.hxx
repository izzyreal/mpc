#pragma once

keys_element_t keys[] =
{ std::make_tuple("none", -1)
, std::make_tuple("escape", KEY_ESC)
, std::make_tuple("f1", KEY_F1)
, std::make_tuple("f2", KEY_F2)
, std::make_tuple("f3", KEY_F3)
, std::make_tuple("f4", KEY_F4)
, std::make_tuple("f5", KEY_F5)
, std::make_tuple("f6", KEY_F6)
, std::make_tuple("f7", KEY_F7)
, std::make_tuple("f8", KEY_F8)
, std::make_tuple("f9", KEY_F9)
, std::make_tuple("f10", KEY_F10)
, std::make_tuple("f11", KEY_F11)
, std::make_tuple("f12", KEY_F12)
, std::make_tuple("f13", KEY_F13)
, std::make_tuple("f14", KEY_F14)
, std::make_tuple("f15", KEY_F15)
, std::make_tuple("f16", KEY_F16)
, std::make_tuple("f17", KEY_F17)
, std::make_tuple("f18", KEY_F18)
, std::make_tuple("f19", KEY_F19)
, std::make_tuple("f20", KEY_F20)
, std::make_tuple("f21", KEY_F21)
, std::make_tuple("f22", KEY_F22)
, std::make_tuple("f23", KEY_F23)
, std::make_tuple("f24", KEY_F24)
, std::make_tuple("zenkaku/hankaku", KEY_GRAVE)
, std::make_tuple("kanji", KEY_GRAVE)
, std::make_tuple("tab", KEY_TAB)
, std::make_tuple("\t", KEY_TAB)
, std::make_tuple("caps lock", KEY_CAPSLOCK)
, std::make_tuple("left shift", KEY_LEFTSHIFT)
, std::make_tuple("right shift", KEY_RIGHTSHIFT)
, std::make_tuple("shift", KEY_LEFTSHIFT)
, std::make_tuple("left control", KEY_LEFTCTRL)
, std::make_tuple("right control", KEY_RIGHTCTRL)
, std::make_tuple("control", KEY_LEFTCTRL)
, std::make_tuple("left alternate", KEY_LEFTALT)
, std::make_tuple("left option", KEY_LEFTALT)
, std::make_tuple("right alternate", KEY_RIGHTALT)
, std::make_tuple("right option", KEY_RIGHTALT)
, std::make_tuple("alternate", KEY_LEFTALT)
, std::make_tuple("option", KEY_LEFTALT)
, std::make_tuple("left meta", KEY_LEFTMETA)
, std::make_tuple("right_meta", KEY_RIGHTMETA)
, std::make_tuple("meta", KEY_LEFTMETA)
, std::make_tuple("muhenkan", KEY_MUHENKAN)
, std::make_tuple("international5", KEY_MUHENKAN)
, std::make_tuple("henkan", KEY_HENKAN)
, std::make_tuple("international4", KEY_HENKAN)
, std::make_tuple("katakana hiragana", KEY_KATAKANAHIRAGANA)
, std::make_tuple("international2", KEY_KATAKANAHIRAGANA)
, std::make_tuple("super", KEY_COMPOSE)
, std::make_tuple("windows", KEY_COMPOSE)
, std::make_tuple("command", KEY_COMPOSE)
, std::make_tuple("left windows", KEY_COMPOSE)
, std::make_tuple("left gui", KEY_COMPOSE)
, std::make_tuple("right windows", KEY_STOP)
, std::make_tuple("right gui", KEY_STOP)
, std::make_tuple("application", KEY_AGAIN)
, std::make_tuple("menu", KEY_MENU)
, std::make_tuple("backspace", KEY_BACKSPACE)
, std::make_tuple("enter", KEY_ENTER)
, std::make_tuple("\n", KEY_ENTER)
, std::make_tuple("space", KEY_SPACE)
, std::make_tuple(" ", KEY_SPACE)
, std::make_tuple("1", KEY_1)
, std::make_tuple("2", KEY_2)
, std::make_tuple("3", KEY_3)
, std::make_tuple("4", KEY_4)
, std::make_tuple("5", KEY_5)
, std::make_tuple("6", KEY_6)
, std::make_tuple("7", KEY_7)
, std::make_tuple("8", KEY_8)
, std::make_tuple("9", KEY_9)
, std::make_tuple("0", KEY_0)
, std::make_tuple("a", KEY_A)
, std::make_tuple("b", KEY_B)
, std::make_tuple("c", KEY_C)
, std::make_tuple("d", KEY_D)
, std::make_tuple("e", KEY_E)
, std::make_tuple("f", KEY_F)
, std::make_tuple("g", KEY_G)
, std::make_tuple("h", KEY_H)
, std::make_tuple("i", KEY_I)
, std::make_tuple("j", KEY_J)
, std::make_tuple("k", KEY_K)
, std::make_tuple("l", KEY_L)
, std::make_tuple("m", KEY_M)
, std::make_tuple("n", KEY_N)
, std::make_tuple("o", KEY_O)
, std::make_tuple("p", KEY_P)
, std::make_tuple("q", KEY_Q)
, std::make_tuple("r", KEY_R)
, std::make_tuple("s", KEY_S)
, std::make_tuple("t", KEY_T)
, std::make_tuple("u", KEY_U)
, std::make_tuple("v", KEY_V)
, std::make_tuple("w", KEY_W)
, std::make_tuple("x", KEY_X)
, std::make_tuple("y", KEY_Y)
, std::make_tuple("z", KEY_Z)
, std::make_tuple("minus", KEY_MINUS)
, std::make_tuple("-", KEY_MINUS)
, std::make_tuple("hat", KEY_EQUAL)
, std::make_tuple("^", KEY_EQUAL)
, std::make_tuple("yen", KEY_YEN)
, std::make_tuple("\\", KEY_YEN)
, std::make_tuple("atmark", KEY_LEFTBRACE)
, std::make_tuple("@", KEY_LEFTBRACE)
, std::make_tuple("left square bracket", KEY_RIGHTBRACE)
, std::make_tuple("[", KEY_RIGHTBRACE)
, std::make_tuple("semicolon", KEY_SEMICOLON)
, std::make_tuple(";", KEY_SEMICOLON)
, std::make_tuple("colon", KEY_APOSTROPHE)
, std::make_tuple(":", KEY_APOSTROPHE)
, std::make_tuple("right square bracket", KEY_BACKSLASH)
, std::make_tuple("]", KEY_BACKSLASH)
, std::make_tuple("comma", KEY_COMMA)
, std::make_tuple(",", KEY_COMMA)
, std::make_tuple("dot", KEY_DOT)
, std::make_tuple(".", KEY_DOT)
, std::make_tuple("slash", KEY_SLASH)
, std::make_tuple("/", KEY_SLASH)
, std::make_tuple("backslash", KEY_BACKSLASH)
, std::make_tuple("\\", KEY_BACKSLASH)
, std::make_tuple("print screen", KEY_SYSRQ)
, std::make_tuple("scroll lock", KEY_SCROLLLOCK)
, std::make_tuple("pause", KEY_PAUSE)
, std::make_tuple("insert", KEY_INSERT)
, std::make_tuple("delete", KEY_DELETE)
, std::make_tuple("home", KEY_HOME)
, std::make_tuple("end", KEY_END)
, std::make_tuple("page up", KEY_PAGEUP)
, std::make_tuple("page down", KEY_PAGEDOWN)
, std::make_tuple("up", KEY_UP)
, std::make_tuple("left", KEY_LEFT)
, std::make_tuple("down", KEY_DOWN)
, std::make_tuple("right", KEY_RIGHT)
, std::make_tuple("num lock", KEY_NUMLOCK)
, std::make_tuple("num slash", KEY_KPSLASH)
, std::make_tuple("num asterisk", KEY_KPASTERISK)
, std::make_tuple("num minus", KEY_KPMINUS)
, std::make_tuple("num plus", KEY_KPPLUS)
, std::make_tuple("num enter", KEY_KPENTER)
, std::make_tuple("num 7", KEY_KP7)
, std::make_tuple("num 8", KEY_KP8)
, std::make_tuple("num 9", KEY_KP9)
, std::make_tuple("num 4", KEY_KP4)
, std::make_tuple("num 5", KEY_KP5)
, std::make_tuple("num 6", KEY_KP6)
, std::make_tuple("num 1", KEY_KP1)
, std::make_tuple("num 2", KEY_KP2)
, std::make_tuple("num 3", KEY_KP3)
, std::make_tuple("num 0", KEY_KP0)
, std::make_tuple("num comma", KEY_KPCOMMA)
, std::make_tuple("num dot", KEY_KPDOT)
, std::make_tuple("num equal", KEY_KPEQUAL)
, std::make_tuple("num plusminus", KEY_KPPLUSMINUS)
, std::make_tuple("num left paren", KEY_KPLEFTPAREN)
, std::make_tuple("num right paren", KEY_KPRIGHTPAREN)
, std::make_tuple("num left brace", -3)
, std::make_tuple("num right brace", -4)
, std::make_tuple("num tab", -5)
, std::make_tuple("num backspace", -6)
, std::make_tuple("num a", -7)
, std::make_tuple("num b", -8)
, std::make_tuple("num c", -9)
, std::make_tuple("num d", -10)
, std::make_tuple("num e", -11)
, std::make_tuple("num f", -12)
, std::make_tuple("num xor", -13)
, std::make_tuple("num ^", -14)
, std::make_tuple("num %", -15)
, std::make_tuple("num <", -16)
, std::make_tuple("num >", -17)
, std::make_tuple("num &", -18)
, std::make_tuple("num &&", -19)
, std::make_tuple("num |", -20)
, std::make_tuple("num ||", -21)
, std::make_tuple("num :", -22)
, std::make_tuple("num #", -23)
, std::make_tuple("num space", -24)
, std::make_tuple("num @", -25)
, std::make_tuple("num !", -26)
, std::make_tuple("num memory store", -27)
, std::make_tuple("num memory recall", -28)
, std::make_tuple("num memory clear", -29)
, std::make_tuple("num memory add", -30)
, std::make_tuple("num memory subtract", -31)
, std::make_tuple("num memory multiply", -32)
, std::make_tuple("num memory divide", -33)
, std::make_tuple("num clear", -34)
, std::make_tuple("num clear entry", -35)
, std::make_tuple("num binary", -36)
, std::make_tuple("num octal", -37)
, std::make_tuple("num decimal", -38)
, std::make_tuple("num hexadecimal", -39)
, std::make_tuple("mute", KEY_MUTE)
, std::make_tuple("volume down", KEY_VOLUMEDOWN)
, std::make_tuple("volume up", KEY_VOLUMEUP)
, std::make_tuple("power", KEY_POWER)
, std::make_tuple("sleep", KEY_SLEEP)
, std::make_tuple("wake_up", KEY_WAKEUP)
, std::make_tuple("screen_lock", KEY_SCREENLOCK)
, std::make_tuple("www", KEY_WWW)
, std::make_tuple("mail", KEY_MAIL)
, std::make_tuple("play pause", KEY_PLAYPAUSE)
, std::make_tuple("next song", KEY_NEXTSONG)
, std::make_tuple("previous song", KEY_PREVIOUSSONG)
, std::make_tuple("wlan", KEY_WLAN)
, std::make_tuple("bluetooth", KEY_BLUETOOTH)
, std::make_tuple("brightness down", KEY_BRIGHTNESSDOWN)
, std::make_tuple("brightness up", KEY_BRIGHTNESSUP)
, std::make_tuple("display off", KEY_DISPLAY_OFF)
, std::make_tuple("function", -2)
, std::make_tuple("eisuu", -40)
, std::make_tuple("lang2", -41)
, std::make_tuple("kana kana", -42)
, std::make_tuple("lang1", -43)
, std::make_tuple("lang3", -44)
, std::make_tuple("lang4", -45)
, std::make_tuple("lang5", -46)
, std::make_tuple("lang6", -47)
, std::make_tuple("lang7", -48)
, std::make_tuple("lang8", -49)
, std::make_tuple("lang9", -50)
, std::make_tuple("international1", -51)
, std::make_tuple("international3", -52)
, std::make_tuple("international6", -53)
, std::make_tuple("international7", -54)
, std::make_tuple("international8", -55)
, std::make_tuple("international9", -56)
, std::make_tuple("alternate erase", -57)
, std::make_tuple("cancel", -58)
, std::make_tuple("clear", -59)
, std::make_tuple("prior", -60)
, std::make_tuple("return", -61)
, std::make_tuple("separator", -62)
, std::make_tuple("out", -63)
, std::make_tuple("oper", -64)
, std::make_tuple("clear/again", -65)
, std::make_tuple("exsel", -66)
, std::make_tuple("num 00", -67)
, std::make_tuple("num 000", -68)
, std::make_tuple("thousands separator", -69)
, std::make_tuple("decimal separator", -70)
, std::make_tuple("currency unit", -71)
, std::make_tuple("currency sub-unit", -72)
};
