#include "KeyCodeHelper.hpp"

#ifdef __APPLE__
#include <TargetConditionals.h>
#if TARGET_OS_IOS
#include "controls/keyboard/UIKeyConstants.hpp"
#else
#include <Carbon/Carbon.h>
#endif
#elif defined _WIN32
#include <WinUser.h>
#elif defined __linux__
#include <X11/keysymdef.h>
#endif

using namespace mpc::controls;

const std::map<const VmpcKeyCode, const std::string> KeyCodeHelper::vmpcKeyCodeNames = {
    { VmpcKeyCode::VMPC_KEY_F1, "F1"  },
    { VmpcKeyCode::VMPC_KEY_F2, "F2"  },
    { VmpcKeyCode::VMPC_KEY_F3, "F3"  },
    { VmpcKeyCode::VMPC_KEY_F4, "F4"  },
    { VmpcKeyCode::VMPC_KEY_F5 , "F5"  },
    { VmpcKeyCode::VMPC_KEY_F6 , "F6"  },
    { VmpcKeyCode::VMPC_KEY_F7 , "F7"  },
    { VmpcKeyCode::VMPC_KEY_F8, "F8"  },
    { VmpcKeyCode::VMPC_KEY_F9, "F9"  },
    { VmpcKeyCode::VMPC_KEY_F10, "F10" },
    { VmpcKeyCode::VMPC_KEY_F11, "F11" },
    { VmpcKeyCode::VMPC_KEY_F12, "F12" },

    { VmpcKeyCode::VMPC_KEY_Escape, "esc" },
    { VmpcKeyCode::VMPC_KEY_ANSI_Grave, "` (backtick)" },
    { VmpcKeyCode::VMPC_KEY_ISO_Section, "ยง (section mark)" },
    { VmpcKeyCode::VMPC_KEY_Tab, "tab" },
    { VmpcKeyCode::VMPC_KEY_CapsLock, "caps lock" },
    { VmpcKeyCode::VMPC_KEY_Shift, "shift" },
    { VmpcKeyCode::VMPC_KEY_LeftShift, "left shift" },
    { VmpcKeyCode::VMPC_KEY_RightShift, "right shift" },
    { VmpcKeyCode::VMPC_KEY_Function, "fn" },
    { VmpcKeyCode::VMPC_KEY_Control, "control" },
    { VmpcKeyCode::VMPC_KEY_LeftControl, "left control" },
    { VmpcKeyCode::VMPC_KEY_RightControl, "right control" },
    { VmpcKeyCode::VMPC_KEY_OptionOrAlt, "option/alt" },
    { VmpcKeyCode::VMPC_KEY_LeftOptionOrAlt, "left option/alt" },
    { VmpcKeyCode::VMPC_KEY_RightOptionOrAlt, "right option/alt" },
    { VmpcKeyCode::VMPC_KEY_LeftMeta, "left start/command/meta" },
    { VmpcKeyCode::VMPC_KEY_RightMeta, "right start/command/meta" },
    { VmpcKeyCode::VMPC_KEY_ANSI_Minus, "minus" },
    { VmpcKeyCode::VMPC_KEY_ANSI_Equal, "equals" },
    { VmpcKeyCode::VMPC_KEY_Delete, "delete" },
    { VmpcKeyCode::VMPC_KEY_Insert, "insert" },
    { VmpcKeyCode::VMPC_KEY_ANSI_LeftBracket, "{ (left bracket)" },
    { VmpcKeyCode::VMPC_KEY_ANSI_RightBracket, "} (right bracket)" },
    { VmpcKeyCode::VMPC_KEY_ANSI_Backslash, "\\ (backslash)" },
    { VmpcKeyCode::VMPC_KEY_ANSI_Semicolon, "; (semicolon)" },
    { VmpcKeyCode::VMPC_KEY_ANSI_Quote, "' (quote)" },
    { VmpcKeyCode::VMPC_KEY_Return, "return" },
    { VmpcKeyCode::VMPC_KEY_ANSI_KeypadEnter, "keypad enter" },
    { VmpcKeyCode::VMPC_KEY_ANSI_Comma, ", (comma)" },
    { VmpcKeyCode::VMPC_KEY_ANSI_Period, ". (period)" },
    { VmpcKeyCode::VMPC_KEY_ANSI_Slash, "/ (slash)" },
    { VmpcKeyCode::VMPC_KEY_Space, "space" },

    { VmpcKeyCode::VMPC_KEY_ANSI_Keypad0, "Keypad 0" },
    { VmpcKeyCode::VMPC_KEY_ANSI_Keypad1, "Keypad 1" },
    { VmpcKeyCode::VMPC_KEY_ANSI_Keypad2, "Keypad 2" },
    { VmpcKeyCode::VMPC_KEY_ANSI_Keypad3, "Keypad 3" },
    { VmpcKeyCode::VMPC_KEY_ANSI_Keypad4, "Keypad 4" },
    { VmpcKeyCode::VMPC_KEY_ANSI_Keypad5, "Keypad 5" },
    { VmpcKeyCode::VMPC_KEY_ANSI_Keypad6, "Keypad 6" },
    { VmpcKeyCode::VMPC_KEY_ANSI_Keypad7, "Keypad 7" },
    { VmpcKeyCode::VMPC_KEY_ANSI_Keypad8, "Keypad 8" },
    { VmpcKeyCode::VMPC_KEY_ANSI_Keypad9, "Keypad 9" },

    { VmpcKeyCode::VMPC_KEY_ANSI_0, "0" },
    { VmpcKeyCode::VMPC_KEY_ANSI_1, "1" },
    { VmpcKeyCode::VMPC_KEY_ANSI_2, "2" },
    { VmpcKeyCode::VMPC_KEY_ANSI_3, "3" },
    { VmpcKeyCode::VMPC_KEY_ANSI_4, "4" },
    { VmpcKeyCode::VMPC_KEY_ANSI_5, "5" },
    { VmpcKeyCode::VMPC_KEY_ANSI_6, "6" },
    { VmpcKeyCode::VMPC_KEY_ANSI_7, "7" },
    { VmpcKeyCode::VMPC_KEY_ANSI_8, "8" },
    { VmpcKeyCode::VMPC_KEY_ANSI_9, "9" },

    { VmpcKeyCode::VMPC_KEY_ANSI_Q, "q" },
    { VmpcKeyCode::VMPC_KEY_ANSI_W, "w" },
    { VmpcKeyCode::VMPC_KEY_ANSI_E, "e" },
    { VmpcKeyCode::VMPC_KEY_ANSI_R, "r" },
    { VmpcKeyCode::VMPC_KEY_ANSI_T, "t" },
    { VmpcKeyCode::VMPC_KEY_ANSI_Y, "y" },
    { VmpcKeyCode::VMPC_KEY_ANSI_U, "u" },
    { VmpcKeyCode::VMPC_KEY_ANSI_I, "i" },
    { VmpcKeyCode::VMPC_KEY_ANSI_O, "o" },
    { VmpcKeyCode::VMPC_KEY_ANSI_P, "p" },
    { VmpcKeyCode::VMPC_KEY_ANSI_A, "a" },
    { VmpcKeyCode::VMPC_KEY_ANSI_S, "s" },
    { VmpcKeyCode::VMPC_KEY_ANSI_D, "d" },
    { VmpcKeyCode::VMPC_KEY_ANSI_F, "f" },
    { VmpcKeyCode::VMPC_KEY_ANSI_G, "g" },
    { VmpcKeyCode::VMPC_KEY_ANSI_H, "h" },
    { VmpcKeyCode::VMPC_KEY_ANSI_J, "j" },
    { VmpcKeyCode::VMPC_KEY_ANSI_K, "k" },
    { VmpcKeyCode::VMPC_KEY_ANSI_L, "l (letter L)" },
    { VmpcKeyCode::VMPC_KEY_ANSI_Z, "z" },
    { VmpcKeyCode::VMPC_KEY_ANSI_X, "x" },
    { VmpcKeyCode::VMPC_KEY_ANSI_C, "c" },
    { VmpcKeyCode::VMPC_KEY_ANSI_V, "v" },
    { VmpcKeyCode::VMPC_KEY_ANSI_B, "b" },
    { VmpcKeyCode::VMPC_KEY_ANSI_N, "n" },
    { VmpcKeyCode::VMPC_KEY_ANSI_M, "m" },

    { VmpcKeyCode::VMPC_KEY_LeftArrow, "cursor left"  },
    { VmpcKeyCode::VMPC_KEY_RightArrow, "cursor right" },
    { VmpcKeyCode::VMPC_KEY_UpArrow, "cursor up"    },
    { VmpcKeyCode::VMPC_KEY_DownArrow, "cursor down"  },

    { VmpcKeyCode::VMPC_KEY_ANSI_KeypadDecimal, "keypad decimal" },
    { VmpcKeyCode::VMPC_KEY_ANSI_KeypadMultiply, "keypad multiply" },
    { VmpcKeyCode::VMPC_KEY_ANSI_KeypadPlus, "keypad plus" },
    { VmpcKeyCode::VMPC_KEY_ANSI_KeypadClear, "keypad clear" },
    { VmpcKeyCode::VMPC_KEY_ANSI_KeypadDivide, "keypad divide" },
    { VmpcKeyCode::VMPC_KEY_ANSI_KeypadEnter, "keypad enter" },
    { VmpcKeyCode::VMPC_KEY_ANSI_KeypadMinus, "keypad minus" },
    { VmpcKeyCode::VMPC_KEY_ANSI_KeypadEquals, "keypad equals" },

    { VmpcKeyCode::VMPC_KEY_Home, "home" },
    { VmpcKeyCode::VMPC_KEY_PageUp, "page up" },
    { VmpcKeyCode::VMPC_KEY_End, "end" },
    { VmpcKeyCode::VMPC_KEY_PageDown, "page down" },
    { VmpcKeyCode::VMPC_KEY_Backspace, "backspace" }
};


const std::map<const int, const VmpcKeyCode> KeyCodeHelper::platformToVmpcKeyCodes = {

#if defined(__APPLE__) && !TARGET_OS_IOS
    { kVK_Delete, VmpcKeyCode::VMPC_KEY_Backspace },
    { kVK_F1, VmpcKeyCode::VMPC_KEY_F1 },
    { kVK_F2, VmpcKeyCode::VMPC_KEY_F2 },
    { kVK_F3, VmpcKeyCode::VMPC_KEY_F3 },
    { kVK_F4, VmpcKeyCode::VMPC_KEY_F4 },
    { kVK_F5 , VmpcKeyCode::VMPC_KEY_F5 },
    { kVK_F6 , VmpcKeyCode::VMPC_KEY_F6 },
    { kVK_F7 , VmpcKeyCode::VMPC_KEY_F7 },
    { kVK_F8, VmpcKeyCode::VMPC_KEY_F8 },
    { kVK_F9, VmpcKeyCode::VMPC_KEY_F9 },
    { kVK_F10, VmpcKeyCode::VMPC_KEY_F10 },
    { kVK_F11, VmpcKeyCode::VMPC_KEY_F11 },
    { kVK_F12, VmpcKeyCode::VMPC_KEY_F12 },

    { kVK_Escape, VmpcKeyCode::VMPC_KEY_Escape },
    { kVK_ANSI_Grave, VmpcKeyCode::VMPC_KEY_ANSI_Grave },
    { kVK_ISO_Section, VmpcKeyCode::VMPC_KEY_ISO_Section },
    { kVK_Tab, VmpcKeyCode::VMPC_KEY_Tab },
    { kVK_CapsLock, VmpcKeyCode::VMPC_KEY_CapsLock },
    { kVK_Shift, VmpcKeyCode::VMPC_KEY_Shift },
    { kVK_Shift, VmpcKeyCode::VMPC_KEY_LeftShift },
    { kVK_RightShift, VmpcKeyCode::VMPC_KEY_RightShift },
    { kVK_Function, VmpcKeyCode::VMPC_KEY_Function },
    { kVK_Control, VmpcKeyCode::VMPC_KEY_Control },
    { kVK_Control, VmpcKeyCode::VMPC_KEY_LeftControl },
    { kVK_RightControl, VmpcKeyCode::VMPC_KEY_RightControl },
    { kVK_Option, VmpcKeyCode::VMPC_KEY_OptionOrAlt },
    { kVK_Command, VmpcKeyCode::VMPC_KEY_LeftMeta },
    { kVK_RightCommand, VmpcKeyCode::VMPC_KEY_RightMeta },
    { kVK_ANSI_Minus, VmpcKeyCode::VMPC_KEY_ANSI_Minus },
    { kVK_ANSI_Equal, VmpcKeyCode::VMPC_KEY_ANSI_Equal },
    { kVK_Delete, VmpcKeyCode::VMPC_KEY_Delete },
    { kVK_ANSI_LeftBracket, VmpcKeyCode::VMPC_KEY_ANSI_LeftBracket },
    { kVK_ANSI_RightBracket, VmpcKeyCode::VMPC_KEY_ANSI_RightBracket },
    { kVK_ANSI_Backslash, VmpcKeyCode::VMPC_KEY_ANSI_Backslash },
    { kVK_ANSI_Semicolon, VmpcKeyCode::VMPC_KEY_ANSI_Semicolon },
    { kVK_ANSI_Quote, VmpcKeyCode::VMPC_KEY_ANSI_Quote },
    { kVK_Return, VmpcKeyCode::VMPC_KEY_Return },
    { kVK_ANSI_KeypadEnter, VmpcKeyCode::VMPC_KEY_ANSI_KeypadEnter },
    { kVK_ANSI_Comma, VmpcKeyCode::VMPC_KEY_ANSI_Comma },
    { kVK_ANSI_Period, VmpcKeyCode::VMPC_KEY_ANSI_Period },
    { kVK_ANSI_Slash, VmpcKeyCode::VMPC_KEY_ANSI_Slash },
    { kVK_RightOption, VmpcKeyCode::VMPC_KEY_RightOptionOrAlt },
    { kVK_Space, VmpcKeyCode::VMPC_KEY_Space },

    { kVK_ANSI_Keypad0, VmpcKeyCode::VMPC_KEY_ANSI_Keypad0 },
    { kVK_ANSI_Keypad1, VmpcKeyCode::VMPC_KEY_ANSI_Keypad1 },
    { kVK_ANSI_Keypad2, VmpcKeyCode::VMPC_KEY_ANSI_Keypad2 },
    { kVK_ANSI_Keypad3, VmpcKeyCode::VMPC_KEY_ANSI_Keypad3 },
    { kVK_ANSI_Keypad4, VmpcKeyCode::VMPC_KEY_ANSI_Keypad4 },
    { kVK_ANSI_Keypad5, VmpcKeyCode::VMPC_KEY_ANSI_Keypad5 },
    { kVK_ANSI_Keypad6, VmpcKeyCode::VMPC_KEY_ANSI_Keypad6 },
    { kVK_ANSI_Keypad7, VmpcKeyCode::VMPC_KEY_ANSI_Keypad7 },
    { kVK_ANSI_Keypad8, VmpcKeyCode::VMPC_KEY_ANSI_Keypad8 },
    { kVK_ANSI_Keypad9, VmpcKeyCode::VMPC_KEY_ANSI_Keypad9 },

    { kVK_ANSI_0, VmpcKeyCode::VMPC_KEY_ANSI_0 },
    { kVK_ANSI_1, VmpcKeyCode::VMPC_KEY_ANSI_1 },
    { kVK_ANSI_2, VmpcKeyCode::VMPC_KEY_ANSI_2 },
    { kVK_ANSI_3, VmpcKeyCode::VMPC_KEY_ANSI_3 },
    { kVK_ANSI_4, VmpcKeyCode::VMPC_KEY_ANSI_4 },
    { kVK_ANSI_5, VmpcKeyCode::VMPC_KEY_ANSI_5 },
    { kVK_ANSI_6, VmpcKeyCode::VMPC_KEY_ANSI_6 },
    { kVK_ANSI_7, VmpcKeyCode::VMPC_KEY_ANSI_7 },
    { kVK_ANSI_8, VmpcKeyCode::VMPC_KEY_ANSI_8 },
    { kVK_ANSI_9, VmpcKeyCode::VMPC_KEY_ANSI_9 },

    { kVK_ANSI_A, VmpcKeyCode::VMPC_KEY_ANSI_A },
    { kVK_ANSI_B, VmpcKeyCode::VMPC_KEY_ANSI_B },
    { kVK_ANSI_C, VmpcKeyCode::VMPC_KEY_ANSI_C },
    { kVK_ANSI_D, VmpcKeyCode::VMPC_KEY_ANSI_D },
    { kVK_ANSI_E, VmpcKeyCode::VMPC_KEY_ANSI_E },
    { kVK_ANSI_F, VmpcKeyCode::VMPC_KEY_ANSI_F },
    { kVK_ANSI_G, VmpcKeyCode::VMPC_KEY_ANSI_G },
    { kVK_ANSI_H, VmpcKeyCode::VMPC_KEY_ANSI_H },
    { kVK_ANSI_I, VmpcKeyCode::VMPC_KEY_ANSI_I },
    { kVK_ANSI_J, VmpcKeyCode::VMPC_KEY_ANSI_J },
    { kVK_ANSI_K, VmpcKeyCode::VMPC_KEY_ANSI_K },
    { kVK_ANSI_L, VmpcKeyCode::VMPC_KEY_ANSI_L },
    { kVK_ANSI_M, VmpcKeyCode::VMPC_KEY_ANSI_M },
    { kVK_ANSI_N, VmpcKeyCode::VMPC_KEY_ANSI_N },
    { kVK_ANSI_O, VmpcKeyCode::VMPC_KEY_ANSI_O },
    { kVK_ANSI_P, VmpcKeyCode::VMPC_KEY_ANSI_P },
    { kVK_ANSI_Q, VmpcKeyCode::VMPC_KEY_ANSI_Q },
    { kVK_ANSI_R, VmpcKeyCode::VMPC_KEY_ANSI_R },
    { kVK_ANSI_S, VmpcKeyCode::VMPC_KEY_ANSI_S },
    { kVK_ANSI_T, VmpcKeyCode::VMPC_KEY_ANSI_T },
    { kVK_ANSI_U, VmpcKeyCode::VMPC_KEY_ANSI_U },
    { kVK_ANSI_V, VmpcKeyCode::VMPC_KEY_ANSI_V },
    { kVK_ANSI_W, VmpcKeyCode::VMPC_KEY_ANSI_W },
    { kVK_ANSI_X, VmpcKeyCode::VMPC_KEY_ANSI_X },
    { kVK_ANSI_Y, VmpcKeyCode::VMPC_KEY_ANSI_Y },
    { kVK_ANSI_Z, VmpcKeyCode::VMPC_KEY_ANSI_Z },

    { kVK_LeftArrow, VmpcKeyCode::VMPC_KEY_LeftArrow },
    { kVK_RightArrow, VmpcKeyCode::VMPC_KEY_RightArrow },
    { kVK_UpArrow, VmpcKeyCode::VMPC_KEY_UpArrow },
    { kVK_DownArrow, VmpcKeyCode::VMPC_KEY_DownArrow },

    { kVK_ANSI_KeypadDecimal, VmpcKeyCode::VMPC_KEY_ANSI_KeypadDecimal },
    { kVK_ANSI_KeypadMultiply, VmpcKeyCode::VMPC_KEY_ANSI_KeypadMultiply },
    { kVK_ANSI_KeypadPlus, VmpcKeyCode::VMPC_KEY_ANSI_KeypadPlus },
    { kVK_ANSI_KeypadClear, VmpcKeyCode::VMPC_KEY_ANSI_KeypadClear },
    { kVK_ANSI_KeypadDivide, VmpcKeyCode::VMPC_KEY_ANSI_KeypadDivide },
    { kVK_ANSI_KeypadEnter, VmpcKeyCode::VMPC_KEY_ANSI_KeypadEnter },
    { kVK_ANSI_KeypadMinus, VmpcKeyCode::VMPC_KEY_ANSI_KeypadMinus },
    { kVK_ANSI_KeypadEquals, VmpcKeyCode::VMPC_KEY_ANSI_KeypadEquals },

    { kVK_Home, VmpcKeyCode::VMPC_KEY_Home },
    { kVK_End, VmpcKeyCode::VMPC_KEY_End },
    { kVK_PageUp, VmpcKeyCode::VMPC_KEY_PageUp },
    { kVK_PageDown, VmpcKeyCode::VMPC_KEY_PageDown }

#elif defined(__APPLE__) && TARGET_OS_IOS
        { UIKeyboardHIDUsageKeyboardF1, VmpcKeyCode::VMPC_KEY_F1 },
        { UIKeyboardHIDUsageKeyboardF2, VmpcKeyCode::VMPC_KEY_F2 },
        { UIKeyboardHIDUsageKeyboardF3, VmpcKeyCode::VMPC_KEY_F3 },
        { UIKeyboardHIDUsageKeyboardF4, VmpcKeyCode::VMPC_KEY_F4 },
        { UIKeyboardHIDUsageKeyboardF5, VmpcKeyCode::VMPC_KEY_F5 },
        { UIKeyboardHIDUsageKeyboardF6, VmpcKeyCode::VMPC_KEY_F6 },
        { UIKeyboardHIDUsageKeyboardF7, VmpcKeyCode::VMPC_KEY_F7 },
        { UIKeyboardHIDUsageKeyboardF8, VmpcKeyCode::VMPC_KEY_F8 },
        { UIKeyboardHIDUsageKeyboardF9, VmpcKeyCode::VMPC_KEY_F9 },
        { UIKeyboardHIDUsageKeyboardF10, VmpcKeyCode::VMPC_KEY_F10 },
        { UIKeyboardHIDUsageKeyboardF11, VmpcKeyCode::VMPC_KEY_F11 },
        { UIKeyboardHIDUsageKeyboardF12, VmpcKeyCode::VMPC_KEY_F12 },

        { UIKeyboardHIDUsageKeyboardEscape, VmpcKeyCode::VMPC_KEY_Escape },
        { UIKeyboardHIDUsageKeyboardGraveAccentAndTilde, VmpcKeyCode::VMPC_KEY_ANSI_Grave },
        { 0, VmpcKeyCode::VMPC_KEY_ISO_Section }, // No corresponding value
        { UIKeyboardHIDUsageKeyboardTab, VmpcKeyCode::VMPC_KEY_Tab },
        { UIKeyboardHIDUsageKeyboardCapsLock, VmpcKeyCode::VMPC_KEY_CapsLock },
        { UIKeyboardHIDUsageKeyboardLeftShift, VmpcKeyCode::VMPC_KEY_Shift },
        { 0, VmpcKeyCode::VMPC_KEY_Function }, // No corresponding value
        { UIKeyboardHIDUsageKeyboardLeftControl, VmpcKeyCode::VMPC_KEY_Control },
        { UIKeyboardHIDUsageKeyboardAlt, VmpcKeyCode::VMPC_KEY_OptionOrAlt },
        { UIKeyboardHIDUsageKeyboardLeftAlt, VmpcKeyCode::VMPC_KEY_LeftOptionOrAlt },
        { UIKeyboardHIDUsageKeyboardRightAlt, VmpcKeyCode::VMPC_KEY_RightOptionOrAlt },
        { UIKeyboardHIDUsageKeyboardGUI, VmpcKeyCode::VMPC_KEY_Meta },
        { UIKeyboardHIDUsageKeyboardLeftGUI, VmpcKeyCode::VMPC_KEY_LeftMeta },
        { UIKeyboardHIDUsageKeyboardRightGUI, VmpcKeyCode::VMPC_KEY_RightMeta },
        { UIKeyboardHIDUsageKeyboardHyphen, VmpcKeyCode::VMPC_KEY_ANSI_Minus },
        { UIKeyboardHIDUsageKeyboardEqualSign, VmpcKeyCode::VMPC_KEY_ANSI_Equal },
        { UIKeyboardHIDUsageKeyboardDeleteOrBackspace, VmpcKeyCode::VMPC_KEY_Delete },
        { UIKeyboardHIDUsageKeyboardOpenBracket, VmpcKeyCode::VMPC_KEY_ANSI_LeftBracket },
        { UIKeyboardHIDUsageKeyboardCloseBracket, VmpcKeyCode::VMPC_KEY_ANSI_RightBracket },
        { UIKeyboardHIDUsageKeyboardBackslash, VmpcKeyCode::VMPC_KEY_ANSI_Backslash },
        { UIKeyboardHIDUsageKeyboardSemicolon, VmpcKeyCode::VMPC_KEY_ANSI_Semicolon },
        { UIKeyboardHIDUsageKeyboardQuote, VmpcKeyCode::VMPC_KEY_ANSI_Quote },
        { UIKeyboardHIDUsageKeyboardReturnOrEnter, VmpcKeyCode::VMPC_KEY_Return },
        { UIKeyboardHIDUsageKeyboardComma, VmpcKeyCode::VMPC_KEY_ANSI_Comma },
        { UIKeyboardHIDUsageKeyboardPeriod, VmpcKeyCode::VMPC_KEY_ANSI_Period },
        { UIKeyboardHIDUsageKeyboardSlash, VmpcKeyCode::VMPC_KEY_ANSI_Slash },
        { UIKeyboardHIDUsageKeyboardRightShift, VmpcKeyCode::VMPC_KEY_RightShift },
        { UIKeyboardHIDUsageKeyboardRightAlt, VmpcKeyCode::VMPC_KEY_RightOptionOrAlt },
        { UIKeyboardHIDUsageKeyboardSpacebar, VmpcKeyCode::VMPC_KEY_Space },

        { UIKeyboardHIDUsageKeypad0, VmpcKeyCode::VMPC_KEY_ANSI_Keypad0 },
        { UIKeyboardHIDUsageKeypad1, VmpcKeyCode::VMPC_KEY_ANSI_Keypad1 },
        { UIKeyboardHIDUsageKeypad2, VmpcKeyCode::VMPC_KEY_ANSI_Keypad2 },
        { UIKeyboardHIDUsageKeypad3, VmpcKeyCode::VMPC_KEY_ANSI_Keypad3 },
        { UIKeyboardHIDUsageKeypad4, VmpcKeyCode::VMPC_KEY_ANSI_Keypad4 },
        { UIKeyboardHIDUsageKeypad5, VmpcKeyCode::VMPC_KEY_ANSI_Keypad5 },
        { UIKeyboardHIDUsageKeypad6, VmpcKeyCode::VMPC_KEY_ANSI_Keypad6 },
        { UIKeyboardHIDUsageKeypad7, VmpcKeyCode::VMPC_KEY_ANSI_Keypad7 },
        { UIKeyboardHIDUsageKeypad8, VmpcKeyCode::VMPC_KEY_ANSI_Keypad8 },
        { UIKeyboardHIDUsageKeypad9, VmpcKeyCode::VMPC_KEY_ANSI_Keypad9 },

        { UIKeyboardHIDUsageKeyboard0, VmpcKeyCode::VMPC_KEY_ANSI_0 },
        { UIKeyboardHIDUsageKeyboard1, VmpcKeyCode::VMPC_KEY_ANSI_1 },
        { UIKeyboardHIDUsageKeyboard2, VmpcKeyCode::VMPC_KEY_ANSI_2 },
        { UIKeyboardHIDUsageKeyboard3, VmpcKeyCode::VMPC_KEY_ANSI_3 },
        { UIKeyboardHIDUsageKeyboard4, VmpcKeyCode::VMPC_KEY_ANSI_4 },
        { UIKeyboardHIDUsageKeyboard5, VmpcKeyCode::VMPC_KEY_ANSI_5 },
        { UIKeyboardHIDUsageKeyboard6, VmpcKeyCode::VMPC_KEY_ANSI_6 },
        { UIKeyboardHIDUsageKeyboard7, VmpcKeyCode::VMPC_KEY_ANSI_7 },
        { UIKeyboardHIDUsageKeyboard8, VmpcKeyCode::VMPC_KEY_ANSI_8 },
        { UIKeyboardHIDUsageKeyboard9, VmpcKeyCode::VMPC_KEY_ANSI_9 },

        { UIKeyboardHIDUsageKeyboardQ, VmpcKeyCode::VMPC_KEY_ANSI_Q },
        { UIKeyboardHIDUsageKeyboardW, VmpcKeyCode::VMPC_KEY_ANSI_W },
        { UIKeyboardHIDUsageKeyboardE, VmpcKeyCode::VMPC_KEY_ANSI_E },
        { UIKeyboardHIDUsageKeyboardR, VmpcKeyCode::VMPC_KEY_ANSI_R },
        { UIKeyboardHIDUsageKeyboardT, VmpcKeyCode::VMPC_KEY_ANSI_T },
        { UIKeyboardHIDUsageKeyboardY, VmpcKeyCode::VMPC_KEY_ANSI_Y },
        { UIKeyboardHIDUsageKeyboardU, VmpcKeyCode::VMPC_KEY_ANSI_U },
        { UIKeyboardHIDUsageKeyboardI, VmpcKeyCode::VMPC_KEY_ANSI_I },
        { UIKeyboardHIDUsageKeyboardO, VmpcKeyCode::VMPC_KEY_ANSI_O },
        { UIKeyboardHIDUsageKeyboardP, VmpcKeyCode::VMPC_KEY_ANSI_P },
        { UIKeyboardHIDUsageKeyboardA, VmpcKeyCode::VMPC_KEY_ANSI_A },
        { UIKeyboardHIDUsageKeyboardS, VmpcKeyCode::VMPC_KEY_ANSI_S },
        { UIKeyboardHIDUsageKeyboardD, VmpcKeyCode::VMPC_KEY_ANSI_D },
        { UIKeyboardHIDUsageKeyboardF, VmpcKeyCode::VMPC_KEY_ANSI_F },
        { UIKeyboardHIDUsageKeyboardG, VmpcKeyCode::VMPC_KEY_ANSI_G },
        { UIKeyboardHIDUsageKeyboardH, VmpcKeyCode::VMPC_KEY_ANSI_H },
        { UIKeyboardHIDUsageKeyboardJ, VmpcKeyCode::VMPC_KEY_ANSI_J },
        { UIKeyboardHIDUsageKeyboardK, VmpcKeyCode::VMPC_KEY_ANSI_K },
        { UIKeyboardHIDUsageKeyboardL, VmpcKeyCode::VMPC_KEY_ANSI_L },
        { UIKeyboardHIDUsageKeyboardZ, VmpcKeyCode::VMPC_KEY_ANSI_Z },
        { UIKeyboardHIDUsageKeyboardX, VmpcKeyCode::VMPC_KEY_ANSI_X },
        { UIKeyboardHIDUsageKeyboardC, VmpcKeyCode::VMPC_KEY_ANSI_C },
        { UIKeyboardHIDUsageKeyboardV, VmpcKeyCode::VMPC_KEY_ANSI_V },
        { UIKeyboardHIDUsageKeyboardB, VmpcKeyCode::VMPC_KEY_ANSI_B },
        { UIKeyboardHIDUsageKeyboardN, VmpcKeyCode::VMPC_KEY_ANSI_N },
        { UIKeyboardHIDUsageKeyboardM, VmpcKeyCode::VMPC_KEY_ANSI_M },

        { UIKeyboardHIDUsageKeyboardLeftArrow, VmpcKeyCode::VMPC_KEY_LeftArrow },
        { UIKeyboardHIDUsageKeyboardRightArrow, VmpcKeyCode::VMPC_KEY_RightArrow },
        { UIKeyboardHIDUsageKeyboardUpArrow, VmpcKeyCode::VMPC_KEY_UpArrow },
        { UIKeyboardHIDUsageKeyboardDownArrow, VmpcKeyCode::VMPC_KEY_DownArrow },

        { 0, VmpcKeyCode::VMPC_KEY_ANSI_KeypadDecimal },
        { UIKeyboardHIDUsageKeypadAsterisk, VmpcKeyCode::VMPC_KEY_ANSI_KeypadMultiply },
        { UIKeyboardHIDUsageKeypadPlus, VmpcKeyCode::VMPC_KEY_ANSI_KeypadPlus },
        { 0, VmpcKeyCode::VMPC_KEY_ANSI_KeypadClear }, // No corresponding value
        { UIKeyboardHIDUsageKeypadSlash, VmpcKeyCode::VMPC_KEY_ANSI_KeypadDivide },
        { UIKeyboardHIDUsageKeypadEnter, VmpcKeyCode::VMPC_KEY_ANSI_KeypadEnter },
        { UIKeyboardHIDUsageKeypadHyphen, VmpcKeyCode::VMPC_KEY_ANSI_KeypadMinus },
        { UIKeyboardHIDUsageKeypadEqualSign, VmpcKeyCode::VMPC_KEY_ANSI_KeypadEquals },

        { UIKeyboardHIDUsageKeyboardHome, VmpcKeyCode::VMPC_KEY_Home },
        { UIKeyboardHIDUsageKeyboardPageUp, VmpcKeyCode::VMPC_KEY_PageUp },
        { UIKeyboardHIDUsageKeyboardEnd, VmpcKeyCode::VMPC_KEY_End },
        { UIKeyboardHIDUsageKeyboardPageDown, VmpcKeyCode::VMPC_KEY_PageDown }


#elif defined _WIN32

    { VK_F1, VmpcKeyCode::VMPC_KEY_F1 },
        { VK_F2, VmpcKeyCode::VMPC_KEY_F2 },
        { VK_F3, VmpcKeyCode::VMPC_KEY_F3 },
        { VK_F4, VmpcKeyCode::VMPC_KEY_F4 },
        { VK_F5, VmpcKeyCode::VMPC_KEY_F5 },
        { VK_F6, VmpcKeyCode::VMPC_KEY_F6 },
        { VK_F7, VmpcKeyCode::VMPC_KEY_F7 },
        { VK_F8, VmpcKeyCode::VMPC_KEY_F8 },
        { VK_F9, VmpcKeyCode::VMPC_KEY_F9 },
        { VK_F10, VmpcKeyCode::VMPC_KEY_F10 },
        { VK_F11, VmpcKeyCode::VMPC_KEY_F11 },
        { VK_F12, VmpcKeyCode::VMPC_KEY_F12 },

        { VK_ESCAPE, VmpcKeyCode::VMPC_KEY_Escape },
        { VK_TAB, VmpcKeyCode::VMPC_KEY_Tab },
        { VK_CAPITAL, VmpcKeyCode::VMPC_KEY_CapsLock },
        { VK_SHIFT, VmpcKeyCode::VMPC_KEY_Shift },
        { VK_CONTROL, VmpcKeyCode::VMPC_KEY_Control },
        { VK_LCONTROL, VmpcKeyCode::VMPC_KEY_LeftControl },
        { VK_RCONTROL, VmpcKeyCode::VMPC_KEY_RightControl },
        { VK_MENU, VmpcKeyCode::VMPC_KEY_OptionOrAlt },
        { VK_LMENU, VmpcKeyCode::VMPC_KEY_LeftOptionOrAlt },
        { VK_RMENU, VmpcKeyCode::VMPC_KEY_RightOptionOrAlt },
        { VK_OEM_MINUS, VmpcKeyCode::VMPC_KEY_ANSI_Minus },
        { VK_OEM_PLUS, VmpcKeyCode::VMPC_KEY_ANSI_Equal },
        { VK_INSERT, VmpcKeyCode::VMPC_KEY_Insert },
        { VK_DELETE, VmpcKeyCode::VMPC_KEY_Delete },
        { VK_RETURN, VmpcKeyCode::VMPC_KEY_Return },
        { VK_OEM_COMMA, VmpcKeyCode::VMPC_KEY_ANSI_Comma },
        { VK_OEM_PERIOD, VmpcKeyCode::VMPC_KEY_ANSI_Period },
        { VK_SPACE, VmpcKeyCode::VMPC_KEY_Space },

        { VK_OEM_1, VmpcKeyCode::VMPC_KEY_ANSI_Semicolon },
        { VK_OEM_2, VmpcKeyCode::VMPC_KEY_ANSI_Slash },
        { VK_OEM_3, VmpcKeyCode::VMPC_KEY_ANSI_Grave },
        { VK_OEM_4, VmpcKeyCode::VMPC_KEY_ANSI_LeftBracket },
        { VK_OEM_6, VmpcKeyCode::VMPC_KEY_ANSI_RightBracket },
        { VK_OEM_5, VmpcKeyCode::VMPC_KEY_ANSI_Backslash },
        { VK_OEM_7, VmpcKeyCode::VMPC_KEY_ANSI_Quote },

        { VK_NUMPAD0, VmpcKeyCode::VMPC_KEY_ANSI_Keypad0 },
        { VK_NUMPAD1, VmpcKeyCode::VMPC_KEY_ANSI_Keypad1 },
        { VK_NUMPAD2, VmpcKeyCode::VMPC_KEY_ANSI_Keypad2 },
        { VK_NUMPAD3, VmpcKeyCode::VMPC_KEY_ANSI_Keypad3 },
        { VK_NUMPAD4, VmpcKeyCode::VMPC_KEY_ANSI_Keypad4 },
        { VK_NUMPAD5, VmpcKeyCode::VMPC_KEY_ANSI_Keypad5 },
        { VK_NUMPAD6, VmpcKeyCode::VMPC_KEY_ANSI_Keypad6 },
        { VK_NUMPAD7, VmpcKeyCode::VMPC_KEY_ANSI_Keypad7 },
        { VK_NUMPAD8, VmpcKeyCode::VMPC_KEY_ANSI_Keypad8 },
        { VK_NUMPAD9, VmpcKeyCode::VMPC_KEY_ANSI_Keypad9 },

        { '0', VmpcKeyCode::VMPC_KEY_ANSI_0 },
        { '1', VmpcKeyCode::VMPC_KEY_ANSI_1 },
        { '2', VmpcKeyCode::VMPC_KEY_ANSI_2 },
        { '3', VmpcKeyCode::VMPC_KEY_ANSI_3 },
        { '4', VmpcKeyCode::VMPC_KEY_ANSI_4 },
        { '5', VmpcKeyCode::VMPC_KEY_ANSI_5 },
        { '6', VmpcKeyCode::VMPC_KEY_ANSI_6 },
        { '7', VmpcKeyCode::VMPC_KEY_ANSI_7 },
        { '8', VmpcKeyCode::VMPC_KEY_ANSI_8 },
        { '9', VmpcKeyCode::VMPC_KEY_ANSI_9 },

        { 'A', VmpcKeyCode::VMPC_KEY_ANSI_A },
        { 'B', VmpcKeyCode::VMPC_KEY_ANSI_B },
        { 'C', VmpcKeyCode::VMPC_KEY_ANSI_C },
        { 'D', VmpcKeyCode::VMPC_KEY_ANSI_D },
        { 'E', VmpcKeyCode::VMPC_KEY_ANSI_E },
        { 'F', VmpcKeyCode::VMPC_KEY_ANSI_F },
        { 'G', VmpcKeyCode::VMPC_KEY_ANSI_G },
        { 'H', VmpcKeyCode::VMPC_KEY_ANSI_H },
        { 'I', VmpcKeyCode::VMPC_KEY_ANSI_I },
        { 'J', VmpcKeyCode::VMPC_KEY_ANSI_J },
        { 'K', VmpcKeyCode::VMPC_KEY_ANSI_K },
        { 'L', VmpcKeyCode::VMPC_KEY_ANSI_L },
        { 'M', VmpcKeyCode::VMPC_KEY_ANSI_M },
        { 'N', VmpcKeyCode::VMPC_KEY_ANSI_N },
        { 'O', VmpcKeyCode::VMPC_KEY_ANSI_O },
        { 'P', VmpcKeyCode::VMPC_KEY_ANSI_P },
        { 'Q', VmpcKeyCode::VMPC_KEY_ANSI_Q },
        { 'R', VmpcKeyCode::VMPC_KEY_ANSI_R },
        { 'S', VmpcKeyCode::VMPC_KEY_ANSI_S },
        { 'T', VmpcKeyCode::VMPC_KEY_ANSI_T },
        { 'U', VmpcKeyCode::VMPC_KEY_ANSI_U },
        { 'V', VmpcKeyCode::VMPC_KEY_ANSI_V },
        { 'W', VmpcKeyCode::VMPC_KEY_ANSI_W },
        { 'X', VmpcKeyCode::VMPC_KEY_ANSI_X },
        { 'Y', VmpcKeyCode::VMPC_KEY_ANSI_Y },
        { 'Z', VmpcKeyCode::VMPC_KEY_ANSI_Z },

        { VK_LEFT, VmpcKeyCode::VMPC_KEY_LeftArrow },
        { VK_RIGHT, VmpcKeyCode::VMPC_KEY_RightArrow },
        { VK_UP, VmpcKeyCode::VMPC_KEY_UpArrow },
        { VK_DOWN, VmpcKeyCode::VMPC_KEY_DownArrow },

        { VK_DECIMAL, VmpcKeyCode::VMPC_KEY_ANSI_KeypadDecimal },
        { VK_MULTIPLY, VmpcKeyCode::VMPC_KEY_ANSI_KeypadMultiply },
        { VK_ADD, VmpcKeyCode::VMPC_KEY_ANSI_KeypadPlus },
        { VK_CLEAR, VmpcKeyCode::VMPC_KEY_ANSI_KeypadClear },
        { VK_DIVIDE, VmpcKeyCode::VMPC_KEY_ANSI_KeypadDivide },
        { VK_SUBTRACT, VmpcKeyCode::VMPC_KEY_ANSI_KeypadMinus },

        { VK_HOME, VmpcKeyCode::VMPC_KEY_Home },
        { VK_PRIOR, VmpcKeyCode::VMPC_KEY_PageUp },
        { VK_END, VmpcKeyCode::VMPC_KEY_End },
        { VK_NEXT, VmpcKeyCode::VMPC_KEY_PageDown },
        { VK_BACKSPACE, VmpcKeyCode::VMPC_KEY_Backspace }

#elif defined __linux__

    { XK_F1, VmpcKeyCode::VMPC_KEY_F1 },
        { XK_F2, VmpcKeyCode::VMPC_KEY_F2 },
        { XK_F3, VmpcKeyCode::VMPC_KEY_F3 },
        { XK_F4, VmpcKeyCode::VMPC_KEY_F4 },
        { XK_F5, VmpcKeyCode::VMPC_KEY_F5 },
        { XK_F6, VmpcKeyCode::VMPC_KEY_F6 },
        { XK_F7, VmpcKeyCode::VMPC_KEY_F7 },
        { XK_F8, VmpcKeyCode::VMPC_KEY_F8 },
        { XK_F9, VmpcKeyCode::VMPC_KEY_F9 },
        { XK_F10, VmpcKeyCode::VMPC_KEY_F10 },
        { XK_F11, VmpcKeyCode::VMPC_KEY_F11 },
        { XK_F12, VmpcKeyCode::VMPC_KEY_F12 },

        { XK_Backspace, VmpcKeyCode::VMPC_KEY_Backspace },
        { XK_Escape, VmpcKeyCode::VMPC_KEY_Escape },
        { XK_Tab, VmpcKeyCode::VMPC_KEY_Tab },
        { XK_Caps_Lock, VmpcKeyCode::VMPC_KEY_CapsLock },
        { XK_Shift_L, VmpcKeyCode::VMPC_KEY_Shift },
        { XK_Control_L, VmpcKeyCode::VMPC_KEY_Control },
        { XK_Alt, VmpcKeyCode::VMPC_KEY_OptionOrAlt },
        { XK_Alt_L, VmpcKeyCode::VMPC_KEY_LeftOptionOrAlt },
        { XK_Alt_R, VmpcKeyCode::VMPC_KEY_RightOptionOrAlt },
        { XK_minus, VmpcKeyCode::VMPC_KEY_ANSI_Minus },
        { XK_equal, VmpcKeyCode::VMPC_KEY_ANSI_Equal },
        { XK_Insert, VmpcKeyCode::VMPC_KEY_Insert },
        { XK_Delete, VmpcKeyCode::VMPC_KEY_Delete },
        { XK_bracketleft, VmpcKeyCode::VMPC_KEY_ANSI_LeftBracket },
        { XK_bracketright, VmpcKeyCode::VMPC_KEY_ANSI_RightBracket },
        { XK_backslash, VmpcKeyCode::VMPC_KEY_ANSI_Backslash },
        { XK_semicolon, VmpcKeyCode::VMPC_KEY_ANSI_Semicolon },
        { XK_apostrophe, VmpcKeyCode::VMPC_KEY_ANSI_Quote },
        { XK_Return, VmpcKeyCode::VMPC_KEY_Return },
        { XK_comma, VmpcKeyCode::VMPC_KEY_ANSI_Comma },
        { XK_period, VmpcKeyCode::VMPC_KEY_ANSI_Period },
        { XK_slash, VmpcKeyCode::VMPC_KEY_ANSI_Slash },
        { XK_space, VmpcKeyCode::VMPC_KEY_Space },

        { XK_0, VmpcKeyCode::VMPC_KEY_ANSI_0 },
        { XK_1, VmpcKeyCode::VMPC_KEY_ANSI_1 },
        { XK_2, VmpcKeyCode::VMPC_KEY_ANSI_2 },
        { XK_3, VmpcKeyCode::VMPC_KEY_ANSI_3 },
        { XK_4, VmpcKeyCode::VMPC_KEY_ANSI_4 },
        { XK_5, VmpcKeyCode::VMPC_KEY_ANSI_5 },
        { XK_6, VmpcKeyCode::VMPC_KEY_ANSI_6 },
        { XK_7, VmpcKeyCode::VMPC_KEY_ANSI_7 },
        { XK_8, VmpcKeyCode::VMPC_KEY_ANSI_8 },
        { XK_9, VmpcKeyCode::VMPC_KEY_ANSI_9 },

        { XK_a, VmpcKeyCode::VMPC_KEY_ANSI_A },
        { XK_b, VmpcKeyCode::VMPC_KEY_ANSI_B },
        { XK_c, VmpcKeyCode::VMPC_KEY_ANSI_C },
        { XK_d, VmpcKeyCode::VMPC_KEY_ANSI_D },
        { XK_e, VmpcKeyCode::VMPC_KEY_ANSI_E },
        { XK_f, VmpcKeyCode::VMPC_KEY_ANSI_F },
        { XK_g, VmpcKeyCode::VMPC_KEY_ANSI_G },
        { XK_h, VmpcKeyCode::VMPC_KEY_ANSI_H },
        { XK_i, VmpcKeyCode::VMPC_KEY_ANSI_I },
        { XK_j, VmpcKeyCode::VMPC_KEY_ANSI_J },
        { XK_k, VmpcKeyCode::VMPC_KEY_ANSI_K },
        { XK_l, VmpcKeyCode::VMPC_KEY_ANSI_L },
        { XK_m, VmpcKeyCode::VMPC_KEY_ANSI_M },
        { XK_n, VmpcKeyCode::VMPC_KEY_ANSI_N },
        { XK_o, VmpcKeyCode::VMPC_KEY_ANSI_O },
        { XK_p, VmpcKeyCode::VMPC_KEY_ANSI_P },
        { XK_q, VmpcKeyCode::VMPC_KEY_ANSI_Q },
        { XK_r, VmpcKeyCode::VMPC_KEY_ANSI_R },
        { XK_s, VmpcKeyCode::VMPC_KEY_ANSI_S },
        { XK_t, VmpcKeyCode::VMPC_KEY_ANSI_T },
        { XK_u, VmpcKeyCode::VMPC_KEY_ANSI_U },
        { XK_v, VmpcKeyCode::VMPC_KEY_ANSI_V },
        { XK_w, VmpcKeyCode::VMPC_KEY_ANSI_W },
        { XK_x, VmpcKeyCode::VMPC_KEY_ANSI_X },
        { XK_y, VmpcKeyCode::VMPC_KEY_ANSI_Y },
        { XK_z, VmpcKeyCode::VMPC_KEY_ANSI_Z },

        { XK_Left, VmpcKeyCode::VMPC_KEY_LeftArrow },
        { XK_Right, VmpcKeyCode::VMPC_KEY_RightArrow },
        { XK_Up, VmpcKeyCode::VMPC_KEY_UpArrow },
        { XK_Down, VmpcKeyCode::VMPC_KEY_DownArrow },

        { XK_Home, VmpcKeyCode::VMPC_KEY_Home },
        { XK_Page_Up, VmpcKeyCode::VMPC_KEY_PageUp },
        { XK_End, VmpcKeyCode::VMPC_KEY_End },
        { XK_Page_Down, VmpcKeyCode::VMPC_KEY_PageDown }
#endif
};

const std::map<const VmpcKeyCode, const char> KeyCodeHelper::typableVmpcKeyCodes = {
    { VmpcKeyCode::VMPC_KEY_ANSI_0, '0' },
    { VmpcKeyCode::VMPC_KEY_ANSI_1, '1' },
    { VmpcKeyCode::VMPC_KEY_ANSI_2, '2' },
    { VmpcKeyCode::VMPC_KEY_ANSI_3, '3' },
    { VmpcKeyCode::VMPC_KEY_ANSI_4, '4' },
    { VmpcKeyCode::VMPC_KEY_ANSI_5, '5' },
    { VmpcKeyCode::VMPC_KEY_ANSI_6, '6' },
    { VmpcKeyCode::VMPC_KEY_ANSI_7, '7' },
    { VmpcKeyCode::VMPC_KEY_ANSI_8, '8' },
    { VmpcKeyCode::VMPC_KEY_ANSI_9, '9' },
    { VmpcKeyCode::VMPC_KEY_ANSI_A, 'a' },
    { VmpcKeyCode::VMPC_KEY_ANSI_B, 'b' },
    { VmpcKeyCode::VMPC_KEY_ANSI_C, 'c' },
    { VmpcKeyCode::VMPC_KEY_ANSI_D, 'd' },
    { VmpcKeyCode::VMPC_KEY_ANSI_E, 'e' },
    { VmpcKeyCode::VMPC_KEY_ANSI_F, 'f' },
    { VmpcKeyCode::VMPC_KEY_ANSI_G, 'g' },
    { VmpcKeyCode::VMPC_KEY_ANSI_H, 'h' },
    { VmpcKeyCode::VMPC_KEY_ANSI_I, 'i' },
    { VmpcKeyCode::VMPC_KEY_ANSI_J, 'j' },
    { VmpcKeyCode::VMPC_KEY_ANSI_K, 'k' },
    { VmpcKeyCode::VMPC_KEY_ANSI_L, 'l' },
    { VmpcKeyCode::VMPC_KEY_ANSI_M, 'm' },
    { VmpcKeyCode::VMPC_KEY_ANSI_N, 'n' },
    { VmpcKeyCode::VMPC_KEY_ANSI_O, 'o' },
    { VmpcKeyCode::VMPC_KEY_ANSI_P, 'p' },
    { VmpcKeyCode::VMPC_KEY_ANSI_Q, 'q' },
    { VmpcKeyCode::VMPC_KEY_ANSI_R, 'r' },
    { VmpcKeyCode::VMPC_KEY_ANSI_S, 's' },
    { VmpcKeyCode::VMPC_KEY_ANSI_T, 't' },
    { VmpcKeyCode::VMPC_KEY_ANSI_U, 'u' },
    { VmpcKeyCode::VMPC_KEY_ANSI_V, 'v' },
    { VmpcKeyCode::VMPC_KEY_ANSI_W, 'w' },
    { VmpcKeyCode::VMPC_KEY_ANSI_X, 'x' },
    { VmpcKeyCode::VMPC_KEY_ANSI_Y, 'y' },
    { VmpcKeyCode::VMPC_KEY_ANSI_Z, 'z' },
    { VmpcKeyCode::VMPC_KEY_Space, ' ' },
    { VmpcKeyCode::VMPC_KEY_Backspace, ' ' }
};

const VmpcKeyCode KeyCodeHelper::getVmpcFromPlatformKeyCode(const int platformKeyCode)
{
    if (platformToVmpcKeyCodes.find(platformKeyCode) == platformToVmpcKeyCodes.end())
    {
        return VmpcKeyCode::VMPC_KEY_UNKNOWN;
    }

    return platformToVmpcKeyCodes.at(platformKeyCode);
}

const char KeyCodeHelper::getCharForTypableVmpcKeyCode(const VmpcKeyCode vmpcKeyCode)
{
    if (typableVmpcKeyCodes.find(vmpcKeyCode) == typableVmpcKeyCodes.end())
    {
        return 0;
    }

    return typableVmpcKeyCodes.at(vmpcKeyCode);
}

